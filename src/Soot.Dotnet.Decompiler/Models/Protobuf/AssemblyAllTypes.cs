// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: AssemblyAllTypes.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Soot.Dotnet.Decompiler.Models.Protobuf {

  /// <summary>Holder for reflection information generated from AssemblyAllTypes.proto</summary>
  public static partial class AssemblyAllTypesReflection {

    #region Descriptor
    /// <summary>File descriptor for AssemblyAllTypes.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AssemblyAllTypesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZBc3NlbWJseUFsbFR5cGVzLnByb3RvIl8KEEFzc2VtYmx5QWxsVHlwZXMS",
            "JgoNbGlzdF9vZl90eXBlcxgBIAMoCzIPLlR5cGVEZWZpbml0aW9uEiMKG2Fs",
            "bF9yZWZlcmVuY2VkX21vZHVsZV90eXBlcxgCIAMoCSLGBAoOVHlwZURlZmlu",
            "aXRpb24SJQoNYWNjZXNzaWJpbGl0eRgBIAEoDjIOLkFjY2Vzc2liaWxpdHkS",
            "EAoIZnVsbG5hbWUYAiABKAkSEQoJbmFtZXNwYWNlGAMgASgJEhMKC2lzX2Fi",
            "c3RyYWN0GAQgASgIEhQKDGlzX3JlYWRfb25seRgFIAEoCBIRCglpc19zZWFs",
            "ZWQYBiABKAgSEQoJaXNfc3RhdGljGAcgASgIEh0KFWRlY2xhcmluZ19vdXRl",
            "cl9jbGFzcxgIIAEoCRIqChFkaXJlY3RfYmFzZV90eXBlcxgJIAMoCzIPLlR5",
            "cGVEZWZpbml0aW9uEh8KCXR5cGVfa2luZBgKIAEoDjIMLlR5cGVLaW5kRGVm",
            "EiIKB21ldGhvZHMYCyADKAsyES5NZXRob2REZWZpbml0aW9uEiAKBmZpZWxk",
            "cxgMIAMoCzIQLkZpZWxkRGVmaW5pdGlvbhInCgpwcm9wZXJ0aWVzGA0gAygL",
            "MhMuUHJvcGVydHlEZWZpbml0aW9uEiUKDG5lc3RlZF90eXBlcxgOIAMoCzIP",
            "LlR5cGVEZWZpbml0aW9uEigKCmF0dHJpYnV0ZXMYDyADKAsyFC5BdHRyaWJ1",
            "dGVEZWZpbml0aW9uEi8KFmdlbmVyaWNfdHlwZV9hcmd1bWVudHMYECADKAsy",
            "Dy5UeXBlRGVmaW5pdGlvbhIYChBhcnJheV9kaW1lbnNpb25zGBEgASgFEiAK",
            "BmV2ZW50cxgSIAMoCzIQLkV2ZW50RGVmaW5pdGlvbiKKBAoQTWV0aG9kRGVm",
            "aW5pdGlvbhIlCg1hY2Nlc3NpYmlsaXR5GAEgASgOMg4uQWNjZXNzaWJpbGl0",
            "eRIMCgRuYW1lGAIgASgJEhAKCGhhc19ib2R5GAMgASgIEicKCXBhcmFtZXRl",
            "chgEIAMoCzIULlBhcmFtZXRlckRlZmluaXRpb24SEwoLaXNfYWJzdHJhY3QY",
            "BSABKAgSEwoLaXNfYWNjZXNzb3IYBiABKAgSFgoOaXNfY29uc3RydWN0b3IY",
            "ByABKAgSFQoNaXNfZGVzdHJ1Y3RvchgIIAEoCBIsCiRpc19leHBsaWNpdF9p",
            "bnRlcmZhY2VfaW1wbGVtZW50YXRpb24YCSABKAgSEQoJaXNfc3RhdGljGAog",
            "ASgIEhIKCmlzX3ZpcnR1YWwYCyABKAgSEwoLaXNfb3BlcmF0b3IYECABKAgS",
            "EQoJaXNfZXh0ZXJuGBEgASgIEhEKCWlzX3Vuc2FmZRgSIAEoCBIRCglpc19z",
            "ZWFsZWQYEyABKAgSJAoLcmV0dXJuX3R5cGUYDCABKAsyDy5UeXBlRGVmaW5p",
            "dGlvbhIoCgphdHRyaWJ1dGVzGA0gAygLMhQuQXR0cmlidXRlRGVmaW5pdGlv",
            "bhIRCglmdWxsX25hbWUYDiABKAkSJwoOZGVjbGFyaW5nX3R5cGUYDyABKAsy",
            "Dy5UeXBlRGVmaW5pdGlvbiKQAQoTUGFyYW1ldGVyRGVmaW5pdGlvbhIdCgR0",
            "eXBlGAEgASgLMg8uVHlwZURlZmluaXRpb24SFgoOcGFyYW1ldGVyX25hbWUY",
            "AiABKAkSDgoGaXNfcmVmGAMgASgIEg4KBmlzX291dBgEIAEoCBINCgVpc19p",
            "bhgFIAEoCBITCgtpc19vcHRpb25hbBgGIAEoCCKmAwoPRmllbGREZWZpbml0",
            "aW9uEiUKDWFjY2Vzc2liaWxpdHkYASABKA4yDi5BY2Nlc3NpYmlsaXR5EhMK",
            "C2lzX2Fic3RyYWN0GAIgASgIEhEKCWlzX3NlYWxlZBgDIAEoCBIsCiRpc19l",
            "eHBsaWNpdF9pbnRlcmZhY2VfaW1wbGVtZW50YXRpb24YBCABKAgSEwoLaXNf",
            "b3ZlcnJpZGUYBSABKAgSEgoKaXNfdmlydHVhbBgGIAEoCBIQCghpc19jb25z",
            "dBgHIAEoCBIUCgxpc19yZWFkX29ubHkYCCABKAgSEQoJaXNfc3RhdGljGAkg",
            "ASgIEh0KBHR5cGUYCiABKAsyDy5UeXBlRGVmaW5pdGlvbhIfCgl0eXBlX2tp",
            "bmQYDiABKA4yDC5UeXBlS2luZERlZhIMCgRuYW1lGAsgASgJEhEKCWZ1bGxf",
            "bmFtZRgMIAEoCRInCg5kZWNsYXJpbmdfdHlwZRgNIAEoCzIPLlR5cGVEZWZp",
            "bml0aW9uEigKCmF0dHJpYnV0ZXMYDyADKAsyFC5BdHRyaWJ1dGVEZWZpbml0",
            "aW9uIsADChJQcm9wZXJ0eURlZmluaXRpb24SJQoNYWNjZXNzaWJpbGl0eRgB",
            "IAEoDjIOLkFjY2Vzc2liaWxpdHkSDwoHY2FuX2dldBgCIAEoCBIPCgdjYW5f",
            "c2V0GAMgASgIEhMKC2lzX2Fic3RyYWN0GAQgASgIEhEKCWlzX3NlYWxlZBgF",
            "IAEoCBIsCiRpc19leHBsaWNpdF9pbnRlcmZhY2VfaW1wbGVtZW50YXRpb24Y",
            "BiABKAgSEwoLaXNfb3ZlcnJpZGUYByABKAgSEgoKaXNfdmlydHVhbBgIIAEo",
            "CBIRCglpc19zdGF0aWMYCSABKAgSEQoJaXNfZXh0ZXJuGA8gASgIEiEKBmdl",
            "dHRlchgKIAEoCzIRLk1ldGhvZERlZmluaXRpb24SIQoGc2V0dGVyGAsgASgL",
            "MhEuTWV0aG9kRGVmaW5pdGlvbhIdCgR0eXBlGAwgASgLMg8uVHlwZURlZmlu",
            "aXRpb24SHwoJdHlwZV9raW5kGA4gASgOMgwuVHlwZUtpbmREZWYSDAoEbmFt",
            "ZRgNIAEoCRIoCgphdHRyaWJ1dGVzGBAgAygLMhQuQXR0cmlidXRlRGVmaW5p",
            "dGlvbiLBAQoTQXR0cmlidXRlRGVmaW5pdGlvbhInCg5hdHRyaWJ1dGVfdHlw",
            "ZRgBIAEoCzIPLlR5cGVEZWZpbml0aW9uEhMKC2NvbnN0cnVjdG9yGAIgASgJ",
            "EjUKD2ZpeGVkX2FyZ3VtZW50cxgDIAMoCzIcLkF0dHJpYnV0ZUFyZ3VtZW50",
            "RGVmaW5pdGlvbhI1Cg9uYW1lZF9hcmd1bWVudHMYBCADKAsyHC5BdHRyaWJ1",
            "dGVBcmd1bWVudERlZmluaXRpb24itQEKG0F0dHJpYnV0ZUFyZ3VtZW50RGVm",
            "aW5pdGlvbhIdCgR0eXBlGAEgASgLMg8uVHlwZURlZmluaXRpb24SDAoEbmFt",
            "ZRgCIAEoCRIUCgx2YWx1ZV9zdHJpbmcYAyADKAkSEwoLdmFsdWVfaW50MzIY",
            "BCADKAUSEwoLdmFsdWVfaW50NjQYBSADKAMSFAoMdmFsdWVfZG91YmxlGAYg",
            "AygBEhMKC3ZhbHVlX2Zsb2F0GAcgAygCIqgCCg9FdmVudERlZmluaXRpb24S",
            "JQoNYWNjZXNzaWJpbGl0eRgBIAEoDjIOLkFjY2Vzc2liaWxpdHkSLgoTYWRk",
            "X2FjY2Vzc29yX21ldGhvZBgCIAEoCzIRLk1ldGhvZERlZmluaXRpb24SDwoH",
            "Y2FuX2FkZBgDIAEoCBISCgpjYW5faW52b2tlGAQgASgIEhIKCmNhbl9yZW1v",
            "dmUYBSABKAgSEQoJZnVsbF9uYW1lGAYgASgJEjEKFmludm9rZV9hY2Nlc3Nv",
            "cl9tZXRob2QYByABKAsyES5NZXRob2REZWZpbml0aW9uEgwKBG5hbWUYCCAB",
            "KAkSMQoWcmVtb3ZlX2FjY2Vzc29yX21ldGhvZBgJIAEoCzIRLk1ldGhvZERl",
            "ZmluaXRpb24qhgEKDUFjY2Vzc2liaWxpdHkSCAoETk9ORRAAEgsKB1BSSVZB",
            "VEUQARIKCgZQVUJMSUMQAhIMCghJTlRFUk5BTBADEg0KCVBST1RFQ1RFRBAE",
            "EhoKFlBST1RFQ1RFRF9BTkRfSU5URVJOQUwQBRIZChVQUk9URUNURURfT1Jf",
            "SU5URVJOQUwQBir2AgoLVHlwZUtpbmREZWYSCwoHTk9fVFlQRRAAEgkKBU9U",
            "SEVSEAESCQoFQ0xBU1MQAhINCglJTlRFUkZBQ0UQAxIKCgZTVFJVQ1QQBBIM",
            "CghERUxFR0FURRAFEggKBEVOVU0QBhIICgRWT0lEEAcSCwoHVU5LTk9XThAI",
            "EggKBE5VTEwQCRINCglOT05FX1RZUEUQChILCgdEWU5BTUlDEAsSFAoQVU5C",
            "T1VORF9UWVBFX0FSRxAMEhIKDlRZUEVfUEFSQU1FVEVSEA0SCQoFQVJSQVkQ",
            "DhILCgdQT0lOVEVSEA8SCgoGQllfUkVGEBASEAoMSU5URVJTRUNUSU9OEBES",
            "DAoIQVJHX0xJU1QQEhIJCgVUVVBMRRATEgsKB01PRF9PUFQQFBILCgdNT0Rf",
            "UkVREBUSCQoFTl9JTlQQFhIKCgZOX1VJTlQQFxIUChBGVU5DVElPTl9QT0lO",
            "VEVSEBgSFAoQQllfUkVGX0FORF9BUlJBWRAZQlMKEXNvb3QuZG90bmV0LnBy",
            "b3RvQhVQcm90b0Fzc2VtYmx5QWxsVHlwZXOqAiZTb290LkRvdG5ldC5EZWNv",
            "bXBpbGVyLk1vZGVscy5Qcm90b2J1ZmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility), typeof(global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeKindDef), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Soot.Dotnet.Decompiler.Models.Protobuf.AssemblyAllTypes), global::Soot.Dotnet.Decompiler.Models.Protobuf.AssemblyAllTypes.Parser, new[]{ "ListOfTypes", "AllReferencedModuleTypes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition), global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition.Parser, new[]{ "Accessibility", "Fullname", "Namespace", "IsAbstract", "IsReadOnly", "IsSealed", "IsStatic", "DeclaringOuterClass", "DirectBaseTypes", "TypeKind", "Methods", "Fields", "Properties", "NestedTypes", "Attributes", "GenericTypeArguments", "ArrayDimensions", "Events" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Soot.Dotnet.Decompiler.Models.Protobuf.MethodDefinition), global::Soot.Dotnet.Decompiler.Models.Protobuf.MethodDefinition.Parser, new[]{ "Accessibility", "Name", "HasBody", "Parameter", "IsAbstract", "IsAccessor", "IsConstructor", "IsDestructor", "IsExplicitInterfaceImplementation", "IsStatic", "IsVirtual", "IsOperator", "IsExtern", "IsUnsafe", "IsSealed", "ReturnType", "Attributes", "FullName", "DeclaringType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Soot.Dotnet.Decompiler.Models.Protobuf.ParameterDefinition), global::Soot.Dotnet.Decompiler.Models.Protobuf.ParameterDefinition.Parser, new[]{ "Type", "ParameterName", "IsRef", "IsOut", "IsIn", "IsOptional" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Soot.Dotnet.Decompiler.Models.Protobuf.FieldDefinition), global::Soot.Dotnet.Decompiler.Models.Protobuf.FieldDefinition.Parser, new[]{ "Accessibility", "IsAbstract", "IsSealed", "IsExplicitInterfaceImplementation", "IsOverride", "IsVirtual", "IsConst", "IsReadOnly", "IsStatic", "Type", "TypeKind", "Name", "FullName", "DeclaringType", "Attributes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Soot.Dotnet.Decompiler.Models.Protobuf.PropertyDefinition), global::Soot.Dotnet.Decompiler.Models.Protobuf.PropertyDefinition.Parser, new[]{ "Accessibility", "CanGet", "CanSet", "IsAbstract", "IsSealed", "IsExplicitInterfaceImplementation", "IsOverride", "IsVirtual", "IsStatic", "IsExtern", "Getter", "Setter", "Type", "TypeKind", "Name", "Attributes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Soot.Dotnet.Decompiler.Models.Protobuf.AttributeDefinition), global::Soot.Dotnet.Decompiler.Models.Protobuf.AttributeDefinition.Parser, new[]{ "AttributeType", "Constructor", "FixedArguments", "NamedArguments" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Soot.Dotnet.Decompiler.Models.Protobuf.AttributeArgumentDefinition), global::Soot.Dotnet.Decompiler.Models.Protobuf.AttributeArgumentDefinition.Parser, new[]{ "Type", "Name", "ValueString", "ValueInt32", "ValueInt64", "ValueDouble", "ValueFloat" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Soot.Dotnet.Decompiler.Models.Protobuf.EventDefinition), global::Soot.Dotnet.Decompiler.Models.Protobuf.EventDefinition.Parser, new[]{ "Accessibility", "AddAccessorMethod", "CanAdd", "CanInvoke", "CanRemove", "FullName", "InvokeAccessorMethod", "Name", "RemoveAccessorMethod" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum Accessibility {
    [pbr::OriginalName("NONE")] None = 0,
    [pbr::OriginalName("PRIVATE")] Private = 1,
    [pbr::OriginalName("PUBLIC")] Public = 2,
    [pbr::OriginalName("INTERNAL")] Internal = 3,
    [pbr::OriginalName("PROTECTED")] Protected = 4,
    [pbr::OriginalName("PROTECTED_AND_INTERNAL")] ProtectedAndInternal = 5,
    [pbr::OriginalName("PROTECTED_OR_INTERNAL")] ProtectedOrInternal = 6,
  }

  public enum TypeKindDef {
    [pbr::OriginalName("NO_TYPE")] NoType = 0,
    [pbr::OriginalName("OTHER")] Other = 1,
    [pbr::OriginalName("CLASS")] Class = 2,
    [pbr::OriginalName("INTERFACE")] Interface = 3,
    [pbr::OriginalName("STRUCT")] Struct = 4,
    [pbr::OriginalName("DELEGATE")] Delegate = 5,
    [pbr::OriginalName("ENUM")] Enum = 6,
    [pbr::OriginalName("VOID")] Void = 7,
    [pbr::OriginalName("UNKNOWN")] Unknown = 8,
    [pbr::OriginalName("NULL")] Null = 9,
    [pbr::OriginalName("NONE_TYPE")] NoneType = 10,
    [pbr::OriginalName("DYNAMIC")] Dynamic = 11,
    [pbr::OriginalName("UNBOUND_TYPE_ARG")] UnboundTypeArg = 12,
    [pbr::OriginalName("TYPE_PARAMETER")] TypeParameter = 13,
    [pbr::OriginalName("ARRAY")] Array = 14,
    [pbr::OriginalName("POINTER")] Pointer = 15,
    [pbr::OriginalName("BY_REF")] ByRef = 16,
    [pbr::OriginalName("INTERSECTION")] Intersection = 17,
    [pbr::OriginalName("ARG_LIST")] ArgList = 18,
    [pbr::OriginalName("TUPLE")] Tuple = 19,
    [pbr::OriginalName("MOD_OPT")] ModOpt = 20,
    [pbr::OriginalName("MOD_REQ")] ModReq = 21,
    [pbr::OriginalName("N_INT")] NInt = 22,
    [pbr::OriginalName("N_UINT")] NUint = 23,
    [pbr::OriginalName("FUNCTION_POINTER")] FunctionPointer = 24,
    [pbr::OriginalName("BY_REF_AND_ARRAY")] ByRefAndArray = 25,
  }

  #endregion

  #region Messages
  /// <summary>
  /// All types and references of one assembly
  /// </summary>
  public sealed partial class AssemblyAllTypes : pb::IMessage<AssemblyAllTypes>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AssemblyAllTypes> _parser = new pb::MessageParser<AssemblyAllTypes>(() => new AssemblyAllTypes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AssemblyAllTypes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Soot.Dotnet.Decompiler.Models.Protobuf.AssemblyAllTypesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssemblyAllTypes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssemblyAllTypes(AssemblyAllTypes other) : this() {
      listOfTypes_ = other.listOfTypes_.Clone();
      allReferencedModuleTypes_ = other.allReferencedModuleTypes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssemblyAllTypes Clone() {
      return new AssemblyAllTypes(this);
    }

    /// <summary>Field number for the "list_of_types" field.</summary>
    public const int ListOfTypesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition> _repeated_listOfTypes_codec
        = pb::FieldCodec.ForMessage(10, global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition.Parser);
    private readonly pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition> listOfTypes_ = new pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition> ListOfTypes {
      get { return listOfTypes_; }
    }

    /// <summary>Field number for the "all_referenced_module_types" field.</summary>
    public const int AllReferencedModuleTypesFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_allReferencedModuleTypes_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> allReferencedModuleTypes_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AllReferencedModuleTypes {
      get { return allReferencedModuleTypes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AssemblyAllTypes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AssemblyAllTypes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listOfTypes_.Equals(other.listOfTypes_)) return false;
      if(!allReferencedModuleTypes_.Equals(other.allReferencedModuleTypes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listOfTypes_.GetHashCode();
      hash ^= allReferencedModuleTypes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      listOfTypes_.WriteTo(output, _repeated_listOfTypes_codec);
      allReferencedModuleTypes_.WriteTo(output, _repeated_allReferencedModuleTypes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      listOfTypes_.WriteTo(ref output, _repeated_listOfTypes_codec);
      allReferencedModuleTypes_.WriteTo(ref output, _repeated_allReferencedModuleTypes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listOfTypes_.CalculateSize(_repeated_listOfTypes_codec);
      size += allReferencedModuleTypes_.CalculateSize(_repeated_allReferencedModuleTypes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AssemblyAllTypes other) {
      if (other == null) {
        return;
      }
      listOfTypes_.Add(other.listOfTypes_);
      allReferencedModuleTypes_.Add(other.allReferencedModuleTypes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listOfTypes_.AddEntriesFrom(input, _repeated_listOfTypes_codec);
            break;
          }
          case 18: {
            allReferencedModuleTypes_.AddEntriesFrom(input, _repeated_allReferencedModuleTypes_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            listOfTypes_.AddEntriesFrom(ref input, _repeated_listOfTypes_codec);
            break;
          }
          case 18: {
            allReferencedModuleTypes_.AddEntriesFrom(ref input, _repeated_allReferencedModuleTypes_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TypeDefinition : pb::IMessage<TypeDefinition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TypeDefinition> _parser = new pb::MessageParser<TypeDefinition>(() => new TypeDefinition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TypeDefinition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Soot.Dotnet.Decompiler.Models.Protobuf.AssemblyAllTypesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeDefinition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeDefinition(TypeDefinition other) : this() {
      accessibility_ = other.accessibility_;
      fullname_ = other.fullname_;
      namespace_ = other.namespace_;
      isAbstract_ = other.isAbstract_;
      isReadOnly_ = other.isReadOnly_;
      isSealed_ = other.isSealed_;
      isStatic_ = other.isStatic_;
      declaringOuterClass_ = other.declaringOuterClass_;
      directBaseTypes_ = other.directBaseTypes_.Clone();
      typeKind_ = other.typeKind_;
      methods_ = other.methods_.Clone();
      fields_ = other.fields_.Clone();
      properties_ = other.properties_.Clone();
      nestedTypes_ = other.nestedTypes_.Clone();
      attributes_ = other.attributes_.Clone();
      genericTypeArguments_ = other.genericTypeArguments_.Clone();
      arrayDimensions_ = other.arrayDimensions_;
      events_ = other.events_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeDefinition Clone() {
      return new TypeDefinition(this);
    }

    /// <summary>Field number for the "accessibility" field.</summary>
    public const int AccessibilityFieldNumber = 1;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility accessibility_ = global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility Accessibility {
      get { return accessibility_; }
      set {
        accessibility_ = value;
      }
    }

    /// <summary>Field number for the "fullname" field.</summary>
    public const int FullnameFieldNumber = 2;
    private string fullname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fullname {
      get { return fullname_; }
      set {
        fullname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "namespace" field.</summary>
    public const int NamespaceFieldNumber = 3;
    private string namespace_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Namespace {
      get { return namespace_; }
      set {
        namespace_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_abstract" field.</summary>
    public const int IsAbstractFieldNumber = 4;
    private bool isAbstract_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsAbstract {
      get { return isAbstract_; }
      set {
        isAbstract_ = value;
      }
    }

    /// <summary>Field number for the "is_read_only" field.</summary>
    public const int IsReadOnlyFieldNumber = 5;
    private bool isReadOnly_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsReadOnly {
      get { return isReadOnly_; }
      set {
        isReadOnly_ = value;
      }
    }

    /// <summary>Field number for the "is_sealed" field.</summary>
    public const int IsSealedFieldNumber = 6;
    private bool isSealed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSealed {
      get { return isSealed_; }
      set {
        isSealed_ = value;
      }
    }

    /// <summary>Field number for the "is_static" field.</summary>
    public const int IsStaticFieldNumber = 7;
    private bool isStatic_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsStatic {
      get { return isStatic_; }
      set {
        isStatic_ = value;
      }
    }

    /// <summary>Field number for the "declaring_outer_class" field.</summary>
    public const int DeclaringOuterClassFieldNumber = 8;
    private string declaringOuterClass_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeclaringOuterClass {
      get { return declaringOuterClass_; }
      set {
        declaringOuterClass_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "direct_base_types" field.</summary>
    public const int DirectBaseTypesFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition> _repeated_directBaseTypes_codec
        = pb::FieldCodec.ForMessage(74, global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition.Parser);
    private readonly pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition> directBaseTypes_ = new pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition> DirectBaseTypes {
      get { return directBaseTypes_; }
    }

    /// <summary>Field number for the "type_kind" field.</summary>
    public const int TypeKindFieldNumber = 10;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeKindDef typeKind_ = global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeKindDef.NoType;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeKindDef TypeKind {
      get { return typeKind_; }
      set {
        typeKind_ = value;
      }
    }

    /// <summary>Field number for the "methods" field.</summary>
    public const int MethodsFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Soot.Dotnet.Decompiler.Models.Protobuf.MethodDefinition> _repeated_methods_codec
        = pb::FieldCodec.ForMessage(90, global::Soot.Dotnet.Decompiler.Models.Protobuf.MethodDefinition.Parser);
    private readonly pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.MethodDefinition> methods_ = new pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.MethodDefinition>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.MethodDefinition> Methods {
      get { return methods_; }
    }

    /// <summary>Field number for the "fields" field.</summary>
    public const int FieldsFieldNumber = 12;
    private static readonly pb::FieldCodec<global::Soot.Dotnet.Decompiler.Models.Protobuf.FieldDefinition> _repeated_fields_codec
        = pb::FieldCodec.ForMessage(98, global::Soot.Dotnet.Decompiler.Models.Protobuf.FieldDefinition.Parser);
    private readonly pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.FieldDefinition> fields_ = new pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.FieldDefinition>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.FieldDefinition> Fields {
      get { return fields_; }
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 13;
    private static readonly pb::FieldCodec<global::Soot.Dotnet.Decompiler.Models.Protobuf.PropertyDefinition> _repeated_properties_codec
        = pb::FieldCodec.ForMessage(106, global::Soot.Dotnet.Decompiler.Models.Protobuf.PropertyDefinition.Parser);
    private readonly pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.PropertyDefinition> properties_ = new pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.PropertyDefinition>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.PropertyDefinition> Properties {
      get { return properties_; }
    }

    /// <summary>Field number for the "nested_types" field.</summary>
    public const int NestedTypesFieldNumber = 14;
    private static readonly pb::FieldCodec<global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition> _repeated_nestedTypes_codec
        = pb::FieldCodec.ForMessage(114, global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition.Parser);
    private readonly pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition> nestedTypes_ = new pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition> NestedTypes {
      get { return nestedTypes_; }
    }

    /// <summary>Field number for the "attributes" field.</summary>
    public const int AttributesFieldNumber = 15;
    private static readonly pb::FieldCodec<global::Soot.Dotnet.Decompiler.Models.Protobuf.AttributeDefinition> _repeated_attributes_codec
        = pb::FieldCodec.ForMessage(122, global::Soot.Dotnet.Decompiler.Models.Protobuf.AttributeDefinition.Parser);
    private readonly pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.AttributeDefinition> attributes_ = new pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.AttributeDefinition>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.AttributeDefinition> Attributes {
      get { return attributes_; }
    }

    /// <summary>Field number for the "generic_type_arguments" field.</summary>
    public const int GenericTypeArgumentsFieldNumber = 16;
    private static readonly pb::FieldCodec<global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition> _repeated_genericTypeArguments_codec
        = pb::FieldCodec.ForMessage(130, global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition.Parser);
    private readonly pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition> genericTypeArguments_ = new pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition> GenericTypeArguments {
      get { return genericTypeArguments_; }
    }

    /// <summary>Field number for the "array_dimensions" field.</summary>
    public const int ArrayDimensionsFieldNumber = 17;
    private int arrayDimensions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ArrayDimensions {
      get { return arrayDimensions_; }
      set {
        arrayDimensions_ = value;
      }
    }

    /// <summary>Field number for the "events" field.</summary>
    public const int EventsFieldNumber = 18;
    private static readonly pb::FieldCodec<global::Soot.Dotnet.Decompiler.Models.Protobuf.EventDefinition> _repeated_events_codec
        = pb::FieldCodec.ForMessage(146, global::Soot.Dotnet.Decompiler.Models.Protobuf.EventDefinition.Parser);
    private readonly pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.EventDefinition> events_ = new pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.EventDefinition>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.EventDefinition> Events {
      get { return events_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TypeDefinition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TypeDefinition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Accessibility != other.Accessibility) return false;
      if (Fullname != other.Fullname) return false;
      if (Namespace != other.Namespace) return false;
      if (IsAbstract != other.IsAbstract) return false;
      if (IsReadOnly != other.IsReadOnly) return false;
      if (IsSealed != other.IsSealed) return false;
      if (IsStatic != other.IsStatic) return false;
      if (DeclaringOuterClass != other.DeclaringOuterClass) return false;
      if(!directBaseTypes_.Equals(other.directBaseTypes_)) return false;
      if (TypeKind != other.TypeKind) return false;
      if(!methods_.Equals(other.methods_)) return false;
      if(!fields_.Equals(other.fields_)) return false;
      if(!properties_.Equals(other.properties_)) return false;
      if(!nestedTypes_.Equals(other.nestedTypes_)) return false;
      if(!attributes_.Equals(other.attributes_)) return false;
      if(!genericTypeArguments_.Equals(other.genericTypeArguments_)) return false;
      if (ArrayDimensions != other.ArrayDimensions) return false;
      if(!events_.Equals(other.events_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Accessibility != global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility.None) hash ^= Accessibility.GetHashCode();
      if (Fullname.Length != 0) hash ^= Fullname.GetHashCode();
      if (Namespace.Length != 0) hash ^= Namespace.GetHashCode();
      if (IsAbstract != false) hash ^= IsAbstract.GetHashCode();
      if (IsReadOnly != false) hash ^= IsReadOnly.GetHashCode();
      if (IsSealed != false) hash ^= IsSealed.GetHashCode();
      if (IsStatic != false) hash ^= IsStatic.GetHashCode();
      if (DeclaringOuterClass.Length != 0) hash ^= DeclaringOuterClass.GetHashCode();
      hash ^= directBaseTypes_.GetHashCode();
      if (TypeKind != global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeKindDef.NoType) hash ^= TypeKind.GetHashCode();
      hash ^= methods_.GetHashCode();
      hash ^= fields_.GetHashCode();
      hash ^= properties_.GetHashCode();
      hash ^= nestedTypes_.GetHashCode();
      hash ^= attributes_.GetHashCode();
      hash ^= genericTypeArguments_.GetHashCode();
      if (ArrayDimensions != 0) hash ^= ArrayDimensions.GetHashCode();
      hash ^= events_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Accessibility != global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Accessibility);
      }
      if (Fullname.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Fullname);
      }
      if (Namespace.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Namespace);
      }
      if (IsAbstract != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsAbstract);
      }
      if (IsReadOnly != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsReadOnly);
      }
      if (IsSealed != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsSealed);
      }
      if (IsStatic != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsStatic);
      }
      if (DeclaringOuterClass.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(DeclaringOuterClass);
      }
      directBaseTypes_.WriteTo(output, _repeated_directBaseTypes_codec);
      if (TypeKind != global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeKindDef.NoType) {
        output.WriteRawTag(80);
        output.WriteEnum((int) TypeKind);
      }
      methods_.WriteTo(output, _repeated_methods_codec);
      fields_.WriteTo(output, _repeated_fields_codec);
      properties_.WriteTo(output, _repeated_properties_codec);
      nestedTypes_.WriteTo(output, _repeated_nestedTypes_codec);
      attributes_.WriteTo(output, _repeated_attributes_codec);
      genericTypeArguments_.WriteTo(output, _repeated_genericTypeArguments_codec);
      if (ArrayDimensions != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(ArrayDimensions);
      }
      events_.WriteTo(output, _repeated_events_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Accessibility != global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Accessibility);
      }
      if (Fullname.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Fullname);
      }
      if (Namespace.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Namespace);
      }
      if (IsAbstract != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsAbstract);
      }
      if (IsReadOnly != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsReadOnly);
      }
      if (IsSealed != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsSealed);
      }
      if (IsStatic != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsStatic);
      }
      if (DeclaringOuterClass.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(DeclaringOuterClass);
      }
      directBaseTypes_.WriteTo(ref output, _repeated_directBaseTypes_codec);
      if (TypeKind != global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeKindDef.NoType) {
        output.WriteRawTag(80);
        output.WriteEnum((int) TypeKind);
      }
      methods_.WriteTo(ref output, _repeated_methods_codec);
      fields_.WriteTo(ref output, _repeated_fields_codec);
      properties_.WriteTo(ref output, _repeated_properties_codec);
      nestedTypes_.WriteTo(ref output, _repeated_nestedTypes_codec);
      attributes_.WriteTo(ref output, _repeated_attributes_codec);
      genericTypeArguments_.WriteTo(ref output, _repeated_genericTypeArguments_codec);
      if (ArrayDimensions != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(ArrayDimensions);
      }
      events_.WriteTo(ref output, _repeated_events_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Accessibility != global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Accessibility);
      }
      if (Fullname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fullname);
      }
      if (Namespace.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Namespace);
      }
      if (IsAbstract != false) {
        size += 1 + 1;
      }
      if (IsReadOnly != false) {
        size += 1 + 1;
      }
      if (IsSealed != false) {
        size += 1 + 1;
      }
      if (IsStatic != false) {
        size += 1 + 1;
      }
      if (DeclaringOuterClass.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeclaringOuterClass);
      }
      size += directBaseTypes_.CalculateSize(_repeated_directBaseTypes_codec);
      if (TypeKind != global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeKindDef.NoType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TypeKind);
      }
      size += methods_.CalculateSize(_repeated_methods_codec);
      size += fields_.CalculateSize(_repeated_fields_codec);
      size += properties_.CalculateSize(_repeated_properties_codec);
      size += nestedTypes_.CalculateSize(_repeated_nestedTypes_codec);
      size += attributes_.CalculateSize(_repeated_attributes_codec);
      size += genericTypeArguments_.CalculateSize(_repeated_genericTypeArguments_codec);
      if (ArrayDimensions != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ArrayDimensions);
      }
      size += events_.CalculateSize(_repeated_events_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TypeDefinition other) {
      if (other == null) {
        return;
      }
      if (other.Accessibility != global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility.None) {
        Accessibility = other.Accessibility;
      }
      if (other.Fullname.Length != 0) {
        Fullname = other.Fullname;
      }
      if (other.Namespace.Length != 0) {
        Namespace = other.Namespace;
      }
      if (other.IsAbstract != false) {
        IsAbstract = other.IsAbstract;
      }
      if (other.IsReadOnly != false) {
        IsReadOnly = other.IsReadOnly;
      }
      if (other.IsSealed != false) {
        IsSealed = other.IsSealed;
      }
      if (other.IsStatic != false) {
        IsStatic = other.IsStatic;
      }
      if (other.DeclaringOuterClass.Length != 0) {
        DeclaringOuterClass = other.DeclaringOuterClass;
      }
      directBaseTypes_.Add(other.directBaseTypes_);
      if (other.TypeKind != global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeKindDef.NoType) {
        TypeKind = other.TypeKind;
      }
      methods_.Add(other.methods_);
      fields_.Add(other.fields_);
      properties_.Add(other.properties_);
      nestedTypes_.Add(other.nestedTypes_);
      attributes_.Add(other.attributes_);
      genericTypeArguments_.Add(other.genericTypeArguments_);
      if (other.ArrayDimensions != 0) {
        ArrayDimensions = other.ArrayDimensions;
      }
      events_.Add(other.events_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Accessibility = (global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility) input.ReadEnum();
            break;
          }
          case 18: {
            Fullname = input.ReadString();
            break;
          }
          case 26: {
            Namespace = input.ReadString();
            break;
          }
          case 32: {
            IsAbstract = input.ReadBool();
            break;
          }
          case 40: {
            IsReadOnly = input.ReadBool();
            break;
          }
          case 48: {
            IsSealed = input.ReadBool();
            break;
          }
          case 56: {
            IsStatic = input.ReadBool();
            break;
          }
          case 66: {
            DeclaringOuterClass = input.ReadString();
            break;
          }
          case 74: {
            directBaseTypes_.AddEntriesFrom(input, _repeated_directBaseTypes_codec);
            break;
          }
          case 80: {
            TypeKind = (global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeKindDef) input.ReadEnum();
            break;
          }
          case 90: {
            methods_.AddEntriesFrom(input, _repeated_methods_codec);
            break;
          }
          case 98: {
            fields_.AddEntriesFrom(input, _repeated_fields_codec);
            break;
          }
          case 106: {
            properties_.AddEntriesFrom(input, _repeated_properties_codec);
            break;
          }
          case 114: {
            nestedTypes_.AddEntriesFrom(input, _repeated_nestedTypes_codec);
            break;
          }
          case 122: {
            attributes_.AddEntriesFrom(input, _repeated_attributes_codec);
            break;
          }
          case 130: {
            genericTypeArguments_.AddEntriesFrom(input, _repeated_genericTypeArguments_codec);
            break;
          }
          case 136: {
            ArrayDimensions = input.ReadInt32();
            break;
          }
          case 146: {
            events_.AddEntriesFrom(input, _repeated_events_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Accessibility = (global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility) input.ReadEnum();
            break;
          }
          case 18: {
            Fullname = input.ReadString();
            break;
          }
          case 26: {
            Namespace = input.ReadString();
            break;
          }
          case 32: {
            IsAbstract = input.ReadBool();
            break;
          }
          case 40: {
            IsReadOnly = input.ReadBool();
            break;
          }
          case 48: {
            IsSealed = input.ReadBool();
            break;
          }
          case 56: {
            IsStatic = input.ReadBool();
            break;
          }
          case 66: {
            DeclaringOuterClass = input.ReadString();
            break;
          }
          case 74: {
            directBaseTypes_.AddEntriesFrom(ref input, _repeated_directBaseTypes_codec);
            break;
          }
          case 80: {
            TypeKind = (global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeKindDef) input.ReadEnum();
            break;
          }
          case 90: {
            methods_.AddEntriesFrom(ref input, _repeated_methods_codec);
            break;
          }
          case 98: {
            fields_.AddEntriesFrom(ref input, _repeated_fields_codec);
            break;
          }
          case 106: {
            properties_.AddEntriesFrom(ref input, _repeated_properties_codec);
            break;
          }
          case 114: {
            nestedTypes_.AddEntriesFrom(ref input, _repeated_nestedTypes_codec);
            break;
          }
          case 122: {
            attributes_.AddEntriesFrom(ref input, _repeated_attributes_codec);
            break;
          }
          case 130: {
            genericTypeArguments_.AddEntriesFrom(ref input, _repeated_genericTypeArguments_codec);
            break;
          }
          case 136: {
            ArrayDimensions = input.ReadInt32();
            break;
          }
          case 146: {
            events_.AddEntriesFrom(ref input, _repeated_events_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MethodDefinition : pb::IMessage<MethodDefinition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MethodDefinition> _parser = new pb::MessageParser<MethodDefinition>(() => new MethodDefinition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MethodDefinition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Soot.Dotnet.Decompiler.Models.Protobuf.AssemblyAllTypesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MethodDefinition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MethodDefinition(MethodDefinition other) : this() {
      accessibility_ = other.accessibility_;
      name_ = other.name_;
      hasBody_ = other.hasBody_;
      parameter_ = other.parameter_.Clone();
      isAbstract_ = other.isAbstract_;
      isAccessor_ = other.isAccessor_;
      isConstructor_ = other.isConstructor_;
      isDestructor_ = other.isDestructor_;
      isExplicitInterfaceImplementation_ = other.isExplicitInterfaceImplementation_;
      isStatic_ = other.isStatic_;
      isVirtual_ = other.isVirtual_;
      isOperator_ = other.isOperator_;
      isExtern_ = other.isExtern_;
      isUnsafe_ = other.isUnsafe_;
      isSealed_ = other.isSealed_;
      returnType_ = other.returnType_ != null ? other.returnType_.Clone() : null;
      attributes_ = other.attributes_.Clone();
      fullName_ = other.fullName_;
      declaringType_ = other.declaringType_ != null ? other.declaringType_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MethodDefinition Clone() {
      return new MethodDefinition(this);
    }

    /// <summary>Field number for the "accessibility" field.</summary>
    public const int AccessibilityFieldNumber = 1;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility accessibility_ = global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility Accessibility {
      get { return accessibility_; }
      set {
        accessibility_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "has_body" field.</summary>
    public const int HasBodyFieldNumber = 3;
    private bool hasBody_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBody {
      get { return hasBody_; }
      set {
        hasBody_ = value;
      }
    }

    /// <summary>Field number for the "parameter" field.</summary>
    public const int ParameterFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Soot.Dotnet.Decompiler.Models.Protobuf.ParameterDefinition> _repeated_parameter_codec
        = pb::FieldCodec.ForMessage(34, global::Soot.Dotnet.Decompiler.Models.Protobuf.ParameterDefinition.Parser);
    private readonly pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.ParameterDefinition> parameter_ = new pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.ParameterDefinition>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.ParameterDefinition> Parameter {
      get { return parameter_; }
    }

    /// <summary>Field number for the "is_abstract" field.</summary>
    public const int IsAbstractFieldNumber = 5;
    private bool isAbstract_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsAbstract {
      get { return isAbstract_; }
      set {
        isAbstract_ = value;
      }
    }

    /// <summary>Field number for the "is_accessor" field.</summary>
    public const int IsAccessorFieldNumber = 6;
    private bool isAccessor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsAccessor {
      get { return isAccessor_; }
      set {
        isAccessor_ = value;
      }
    }

    /// <summary>Field number for the "is_constructor" field.</summary>
    public const int IsConstructorFieldNumber = 7;
    private bool isConstructor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsConstructor {
      get { return isConstructor_; }
      set {
        isConstructor_ = value;
      }
    }

    /// <summary>Field number for the "is_destructor" field.</summary>
    public const int IsDestructorFieldNumber = 8;
    private bool isDestructor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDestructor {
      get { return isDestructor_; }
      set {
        isDestructor_ = value;
      }
    }

    /// <summary>Field number for the "is_explicit_interface_implementation" field.</summary>
    public const int IsExplicitInterfaceImplementationFieldNumber = 9;
    private bool isExplicitInterfaceImplementation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsExplicitInterfaceImplementation {
      get { return isExplicitInterfaceImplementation_; }
      set {
        isExplicitInterfaceImplementation_ = value;
      }
    }

    /// <summary>Field number for the "is_static" field.</summary>
    public const int IsStaticFieldNumber = 10;
    private bool isStatic_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsStatic {
      get { return isStatic_; }
      set {
        isStatic_ = value;
      }
    }

    /// <summary>Field number for the "is_virtual" field.</summary>
    public const int IsVirtualFieldNumber = 11;
    private bool isVirtual_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsVirtual {
      get { return isVirtual_; }
      set {
        isVirtual_ = value;
      }
    }

    /// <summary>Field number for the "is_operator" field.</summary>
    public const int IsOperatorFieldNumber = 16;
    private bool isOperator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsOperator {
      get { return isOperator_; }
      set {
        isOperator_ = value;
      }
    }

    /// <summary>Field number for the "is_extern" field.</summary>
    public const int IsExternFieldNumber = 17;
    private bool isExtern_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsExtern {
      get { return isExtern_; }
      set {
        isExtern_ = value;
      }
    }

    /// <summary>Field number for the "is_unsafe" field.</summary>
    public const int IsUnsafeFieldNumber = 18;
    private bool isUnsafe_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsUnsafe {
      get { return isUnsafe_; }
      set {
        isUnsafe_ = value;
      }
    }

    /// <summary>Field number for the "is_sealed" field.</summary>
    public const int IsSealedFieldNumber = 19;
    private bool isSealed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSealed {
      get { return isSealed_; }
      set {
        isSealed_ = value;
      }
    }

    /// <summary>Field number for the "return_type" field.</summary>
    public const int ReturnTypeFieldNumber = 12;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition returnType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition ReturnType {
      get { return returnType_; }
      set {
        returnType_ = value;
      }
    }

    /// <summary>Field number for the "attributes" field.</summary>
    public const int AttributesFieldNumber = 13;
    private static readonly pb::FieldCodec<global::Soot.Dotnet.Decompiler.Models.Protobuf.AttributeDefinition> _repeated_attributes_codec
        = pb::FieldCodec.ForMessage(106, global::Soot.Dotnet.Decompiler.Models.Protobuf.AttributeDefinition.Parser);
    private readonly pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.AttributeDefinition> attributes_ = new pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.AttributeDefinition>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.AttributeDefinition> Attributes {
      get { return attributes_; }
    }

    /// <summary>Field number for the "full_name" field.</summary>
    public const int FullNameFieldNumber = 14;
    private string fullName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FullName {
      get { return fullName_; }
      set {
        fullName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "declaring_type" field.</summary>
    public const int DeclaringTypeFieldNumber = 15;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition declaringType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition DeclaringType {
      get { return declaringType_; }
      set {
        declaringType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MethodDefinition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MethodDefinition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Accessibility != other.Accessibility) return false;
      if (Name != other.Name) return false;
      if (HasBody != other.HasBody) return false;
      if(!parameter_.Equals(other.parameter_)) return false;
      if (IsAbstract != other.IsAbstract) return false;
      if (IsAccessor != other.IsAccessor) return false;
      if (IsConstructor != other.IsConstructor) return false;
      if (IsDestructor != other.IsDestructor) return false;
      if (IsExplicitInterfaceImplementation != other.IsExplicitInterfaceImplementation) return false;
      if (IsStatic != other.IsStatic) return false;
      if (IsVirtual != other.IsVirtual) return false;
      if (IsOperator != other.IsOperator) return false;
      if (IsExtern != other.IsExtern) return false;
      if (IsUnsafe != other.IsUnsafe) return false;
      if (IsSealed != other.IsSealed) return false;
      if (!object.Equals(ReturnType, other.ReturnType)) return false;
      if(!attributes_.Equals(other.attributes_)) return false;
      if (FullName != other.FullName) return false;
      if (!object.Equals(DeclaringType, other.DeclaringType)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Accessibility != global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility.None) hash ^= Accessibility.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (HasBody != false) hash ^= HasBody.GetHashCode();
      hash ^= parameter_.GetHashCode();
      if (IsAbstract != false) hash ^= IsAbstract.GetHashCode();
      if (IsAccessor != false) hash ^= IsAccessor.GetHashCode();
      if (IsConstructor != false) hash ^= IsConstructor.GetHashCode();
      if (IsDestructor != false) hash ^= IsDestructor.GetHashCode();
      if (IsExplicitInterfaceImplementation != false) hash ^= IsExplicitInterfaceImplementation.GetHashCode();
      if (IsStatic != false) hash ^= IsStatic.GetHashCode();
      if (IsVirtual != false) hash ^= IsVirtual.GetHashCode();
      if (IsOperator != false) hash ^= IsOperator.GetHashCode();
      if (IsExtern != false) hash ^= IsExtern.GetHashCode();
      if (IsUnsafe != false) hash ^= IsUnsafe.GetHashCode();
      if (IsSealed != false) hash ^= IsSealed.GetHashCode();
      if (returnType_ != null) hash ^= ReturnType.GetHashCode();
      hash ^= attributes_.GetHashCode();
      if (FullName.Length != 0) hash ^= FullName.GetHashCode();
      if (declaringType_ != null) hash ^= DeclaringType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Accessibility != global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Accessibility);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (HasBody != false) {
        output.WriteRawTag(24);
        output.WriteBool(HasBody);
      }
      parameter_.WriteTo(output, _repeated_parameter_codec);
      if (IsAbstract != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsAbstract);
      }
      if (IsAccessor != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsAccessor);
      }
      if (IsConstructor != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsConstructor);
      }
      if (IsDestructor != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsDestructor);
      }
      if (IsExplicitInterfaceImplementation != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsExplicitInterfaceImplementation);
      }
      if (IsStatic != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsStatic);
      }
      if (IsVirtual != false) {
        output.WriteRawTag(88);
        output.WriteBool(IsVirtual);
      }
      if (returnType_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(ReturnType);
      }
      attributes_.WriteTo(output, _repeated_attributes_codec);
      if (FullName.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(FullName);
      }
      if (declaringType_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(DeclaringType);
      }
      if (IsOperator != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(IsOperator);
      }
      if (IsExtern != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(IsExtern);
      }
      if (IsUnsafe != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(IsUnsafe);
      }
      if (IsSealed != false) {
        output.WriteRawTag(152, 1);
        output.WriteBool(IsSealed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Accessibility != global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Accessibility);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (HasBody != false) {
        output.WriteRawTag(24);
        output.WriteBool(HasBody);
      }
      parameter_.WriteTo(ref output, _repeated_parameter_codec);
      if (IsAbstract != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsAbstract);
      }
      if (IsAccessor != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsAccessor);
      }
      if (IsConstructor != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsConstructor);
      }
      if (IsDestructor != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsDestructor);
      }
      if (IsExplicitInterfaceImplementation != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsExplicitInterfaceImplementation);
      }
      if (IsStatic != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsStatic);
      }
      if (IsVirtual != false) {
        output.WriteRawTag(88);
        output.WriteBool(IsVirtual);
      }
      if (returnType_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(ReturnType);
      }
      attributes_.WriteTo(ref output, _repeated_attributes_codec);
      if (FullName.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(FullName);
      }
      if (declaringType_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(DeclaringType);
      }
      if (IsOperator != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(IsOperator);
      }
      if (IsExtern != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(IsExtern);
      }
      if (IsUnsafe != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(IsUnsafe);
      }
      if (IsSealed != false) {
        output.WriteRawTag(152, 1);
        output.WriteBool(IsSealed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Accessibility != global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Accessibility);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasBody != false) {
        size += 1 + 1;
      }
      size += parameter_.CalculateSize(_repeated_parameter_codec);
      if (IsAbstract != false) {
        size += 1 + 1;
      }
      if (IsAccessor != false) {
        size += 1 + 1;
      }
      if (IsConstructor != false) {
        size += 1 + 1;
      }
      if (IsDestructor != false) {
        size += 1 + 1;
      }
      if (IsExplicitInterfaceImplementation != false) {
        size += 1 + 1;
      }
      if (IsStatic != false) {
        size += 1 + 1;
      }
      if (IsVirtual != false) {
        size += 1 + 1;
      }
      if (IsOperator != false) {
        size += 2 + 1;
      }
      if (IsExtern != false) {
        size += 2 + 1;
      }
      if (IsUnsafe != false) {
        size += 2 + 1;
      }
      if (IsSealed != false) {
        size += 2 + 1;
      }
      if (returnType_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReturnType);
      }
      size += attributes_.CalculateSize(_repeated_attributes_codec);
      if (FullName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FullName);
      }
      if (declaringType_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeclaringType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MethodDefinition other) {
      if (other == null) {
        return;
      }
      if (other.Accessibility != global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility.None) {
        Accessibility = other.Accessibility;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.HasBody != false) {
        HasBody = other.HasBody;
      }
      parameter_.Add(other.parameter_);
      if (other.IsAbstract != false) {
        IsAbstract = other.IsAbstract;
      }
      if (other.IsAccessor != false) {
        IsAccessor = other.IsAccessor;
      }
      if (other.IsConstructor != false) {
        IsConstructor = other.IsConstructor;
      }
      if (other.IsDestructor != false) {
        IsDestructor = other.IsDestructor;
      }
      if (other.IsExplicitInterfaceImplementation != false) {
        IsExplicitInterfaceImplementation = other.IsExplicitInterfaceImplementation;
      }
      if (other.IsStatic != false) {
        IsStatic = other.IsStatic;
      }
      if (other.IsVirtual != false) {
        IsVirtual = other.IsVirtual;
      }
      if (other.IsOperator != false) {
        IsOperator = other.IsOperator;
      }
      if (other.IsExtern != false) {
        IsExtern = other.IsExtern;
      }
      if (other.IsUnsafe != false) {
        IsUnsafe = other.IsUnsafe;
      }
      if (other.IsSealed != false) {
        IsSealed = other.IsSealed;
      }
      if (other.returnType_ != null) {
        if (returnType_ == null) {
          ReturnType = new global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition();
        }
        ReturnType.MergeFrom(other.ReturnType);
      }
      attributes_.Add(other.attributes_);
      if (other.FullName.Length != 0) {
        FullName = other.FullName;
      }
      if (other.declaringType_ != null) {
        if (declaringType_ == null) {
          DeclaringType = new global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition();
        }
        DeclaringType.MergeFrom(other.DeclaringType);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Accessibility = (global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility) input.ReadEnum();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            HasBody = input.ReadBool();
            break;
          }
          case 34: {
            parameter_.AddEntriesFrom(input, _repeated_parameter_codec);
            break;
          }
          case 40: {
            IsAbstract = input.ReadBool();
            break;
          }
          case 48: {
            IsAccessor = input.ReadBool();
            break;
          }
          case 56: {
            IsConstructor = input.ReadBool();
            break;
          }
          case 64: {
            IsDestructor = input.ReadBool();
            break;
          }
          case 72: {
            IsExplicitInterfaceImplementation = input.ReadBool();
            break;
          }
          case 80: {
            IsStatic = input.ReadBool();
            break;
          }
          case 88: {
            IsVirtual = input.ReadBool();
            break;
          }
          case 98: {
            if (returnType_ == null) {
              ReturnType = new global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition();
            }
            input.ReadMessage(ReturnType);
            break;
          }
          case 106: {
            attributes_.AddEntriesFrom(input, _repeated_attributes_codec);
            break;
          }
          case 114: {
            FullName = input.ReadString();
            break;
          }
          case 122: {
            if (declaringType_ == null) {
              DeclaringType = new global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition();
            }
            input.ReadMessage(DeclaringType);
            break;
          }
          case 128: {
            IsOperator = input.ReadBool();
            break;
          }
          case 136: {
            IsExtern = input.ReadBool();
            break;
          }
          case 144: {
            IsUnsafe = input.ReadBool();
            break;
          }
          case 152: {
            IsSealed = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Accessibility = (global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility) input.ReadEnum();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            HasBody = input.ReadBool();
            break;
          }
          case 34: {
            parameter_.AddEntriesFrom(ref input, _repeated_parameter_codec);
            break;
          }
          case 40: {
            IsAbstract = input.ReadBool();
            break;
          }
          case 48: {
            IsAccessor = input.ReadBool();
            break;
          }
          case 56: {
            IsConstructor = input.ReadBool();
            break;
          }
          case 64: {
            IsDestructor = input.ReadBool();
            break;
          }
          case 72: {
            IsExplicitInterfaceImplementation = input.ReadBool();
            break;
          }
          case 80: {
            IsStatic = input.ReadBool();
            break;
          }
          case 88: {
            IsVirtual = input.ReadBool();
            break;
          }
          case 98: {
            if (returnType_ == null) {
              ReturnType = new global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition();
            }
            input.ReadMessage(ReturnType);
            break;
          }
          case 106: {
            attributes_.AddEntriesFrom(ref input, _repeated_attributes_codec);
            break;
          }
          case 114: {
            FullName = input.ReadString();
            break;
          }
          case 122: {
            if (declaringType_ == null) {
              DeclaringType = new global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition();
            }
            input.ReadMessage(DeclaringType);
            break;
          }
          case 128: {
            IsOperator = input.ReadBool();
            break;
          }
          case 136: {
            IsExtern = input.ReadBool();
            break;
          }
          case 144: {
            IsUnsafe = input.ReadBool();
            break;
          }
          case 152: {
            IsSealed = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///*
  ///Parameter of a method
  /// </summary>
  public sealed partial class ParameterDefinition : pb::IMessage<ParameterDefinition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ParameterDefinition> _parser = new pb::MessageParser<ParameterDefinition>(() => new ParameterDefinition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ParameterDefinition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Soot.Dotnet.Decompiler.Models.Protobuf.AssemblyAllTypesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParameterDefinition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParameterDefinition(ParameterDefinition other) : this() {
      type_ = other.type_ != null ? other.type_.Clone() : null;
      parameterName_ = other.parameterName_;
      isRef_ = other.isRef_;
      isOut_ = other.isOut_;
      isIn_ = other.isIn_;
      isOptional_ = other.isOptional_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParameterDefinition Clone() {
      return new ParameterDefinition(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "parameter_name" field.</summary>
    public const int ParameterNameFieldNumber = 2;
    private string parameterName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParameterName {
      get { return parameterName_; }
      set {
        parameterName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_ref" field.</summary>
    public const int IsRefFieldNumber = 3;
    private bool isRef_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsRef {
      get { return isRef_; }
      set {
        isRef_ = value;
      }
    }

    /// <summary>Field number for the "is_out" field.</summary>
    public const int IsOutFieldNumber = 4;
    private bool isOut_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsOut {
      get { return isOut_; }
      set {
        isOut_ = value;
      }
    }

    /// <summary>Field number for the "is_in" field.</summary>
    public const int IsInFieldNumber = 5;
    private bool isIn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsIn {
      get { return isIn_; }
      set {
        isIn_ = value;
      }
    }

    /// <summary>Field number for the "is_optional" field.</summary>
    public const int IsOptionalFieldNumber = 6;
    private bool isOptional_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsOptional {
      get { return isOptional_; }
      set {
        isOptional_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ParameterDefinition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ParameterDefinition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Type, other.Type)) return false;
      if (ParameterName != other.ParameterName) return false;
      if (IsRef != other.IsRef) return false;
      if (IsOut != other.IsOut) return false;
      if (IsIn != other.IsIn) return false;
      if (IsOptional != other.IsOptional) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (type_ != null) hash ^= Type.GetHashCode();
      if (ParameterName.Length != 0) hash ^= ParameterName.GetHashCode();
      if (IsRef != false) hash ^= IsRef.GetHashCode();
      if (IsOut != false) hash ^= IsOut.GetHashCode();
      if (IsIn != false) hash ^= IsIn.GetHashCode();
      if (IsOptional != false) hash ^= IsOptional.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (type_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Type);
      }
      if (ParameterName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ParameterName);
      }
      if (IsRef != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsRef);
      }
      if (IsOut != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsOut);
      }
      if (IsIn != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsIn);
      }
      if (IsOptional != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsOptional);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (type_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Type);
      }
      if (ParameterName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ParameterName);
      }
      if (IsRef != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsRef);
      }
      if (IsOut != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsOut);
      }
      if (IsIn != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsIn);
      }
      if (IsOptional != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsOptional);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (type_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Type);
      }
      if (ParameterName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParameterName);
      }
      if (IsRef != false) {
        size += 1 + 1;
      }
      if (IsOut != false) {
        size += 1 + 1;
      }
      if (IsIn != false) {
        size += 1 + 1;
      }
      if (IsOptional != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ParameterDefinition other) {
      if (other == null) {
        return;
      }
      if (other.type_ != null) {
        if (type_ == null) {
          Type = new global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition();
        }
        Type.MergeFrom(other.Type);
      }
      if (other.ParameterName.Length != 0) {
        ParameterName = other.ParameterName;
      }
      if (other.IsRef != false) {
        IsRef = other.IsRef;
      }
      if (other.IsOut != false) {
        IsOut = other.IsOut;
      }
      if (other.IsIn != false) {
        IsIn = other.IsIn;
      }
      if (other.IsOptional != false) {
        IsOptional = other.IsOptional;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (type_ == null) {
              Type = new global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition();
            }
            input.ReadMessage(Type);
            break;
          }
          case 18: {
            ParameterName = input.ReadString();
            break;
          }
          case 24: {
            IsRef = input.ReadBool();
            break;
          }
          case 32: {
            IsOut = input.ReadBool();
            break;
          }
          case 40: {
            IsIn = input.ReadBool();
            break;
          }
          case 48: {
            IsOptional = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (type_ == null) {
              Type = new global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition();
            }
            input.ReadMessage(Type);
            break;
          }
          case 18: {
            ParameterName = input.ReadString();
            break;
          }
          case 24: {
            IsRef = input.ReadBool();
            break;
          }
          case 32: {
            IsOut = input.ReadBool();
            break;
          }
          case 40: {
            IsIn = input.ReadBool();
            break;
          }
          case 48: {
            IsOptional = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FieldDefinition : pb::IMessage<FieldDefinition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FieldDefinition> _parser = new pb::MessageParser<FieldDefinition>(() => new FieldDefinition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FieldDefinition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Soot.Dotnet.Decompiler.Models.Protobuf.AssemblyAllTypesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FieldDefinition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FieldDefinition(FieldDefinition other) : this() {
      accessibility_ = other.accessibility_;
      isAbstract_ = other.isAbstract_;
      isSealed_ = other.isSealed_;
      isExplicitInterfaceImplementation_ = other.isExplicitInterfaceImplementation_;
      isOverride_ = other.isOverride_;
      isVirtual_ = other.isVirtual_;
      isConst_ = other.isConst_;
      isReadOnly_ = other.isReadOnly_;
      isStatic_ = other.isStatic_;
      type_ = other.type_ != null ? other.type_.Clone() : null;
      typeKind_ = other.typeKind_;
      name_ = other.name_;
      fullName_ = other.fullName_;
      declaringType_ = other.declaringType_ != null ? other.declaringType_.Clone() : null;
      attributes_ = other.attributes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FieldDefinition Clone() {
      return new FieldDefinition(this);
    }

    /// <summary>Field number for the "accessibility" field.</summary>
    public const int AccessibilityFieldNumber = 1;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility accessibility_ = global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility Accessibility {
      get { return accessibility_; }
      set {
        accessibility_ = value;
      }
    }

    /// <summary>Field number for the "is_abstract" field.</summary>
    public const int IsAbstractFieldNumber = 2;
    private bool isAbstract_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsAbstract {
      get { return isAbstract_; }
      set {
        isAbstract_ = value;
      }
    }

    /// <summary>Field number for the "is_sealed" field.</summary>
    public const int IsSealedFieldNumber = 3;
    private bool isSealed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSealed {
      get { return isSealed_; }
      set {
        isSealed_ = value;
      }
    }

    /// <summary>Field number for the "is_explicit_interface_implementation" field.</summary>
    public const int IsExplicitInterfaceImplementationFieldNumber = 4;
    private bool isExplicitInterfaceImplementation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsExplicitInterfaceImplementation {
      get { return isExplicitInterfaceImplementation_; }
      set {
        isExplicitInterfaceImplementation_ = value;
      }
    }

    /// <summary>Field number for the "is_override" field.</summary>
    public const int IsOverrideFieldNumber = 5;
    private bool isOverride_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsOverride {
      get { return isOverride_; }
      set {
        isOverride_ = value;
      }
    }

    /// <summary>Field number for the "is_virtual" field.</summary>
    public const int IsVirtualFieldNumber = 6;
    private bool isVirtual_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsVirtual {
      get { return isVirtual_; }
      set {
        isVirtual_ = value;
      }
    }

    /// <summary>Field number for the "is_const" field.</summary>
    public const int IsConstFieldNumber = 7;
    private bool isConst_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsConst {
      get { return isConst_; }
      set {
        isConst_ = value;
      }
    }

    /// <summary>Field number for the "is_read_only" field.</summary>
    public const int IsReadOnlyFieldNumber = 8;
    private bool isReadOnly_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsReadOnly {
      get { return isReadOnly_; }
      set {
        isReadOnly_ = value;
      }
    }

    /// <summary>Field number for the "is_static" field.</summary>
    public const int IsStaticFieldNumber = 9;
    private bool isStatic_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsStatic {
      get { return isStatic_; }
      set {
        isStatic_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 10;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "type_kind" field.</summary>
    public const int TypeKindFieldNumber = 14;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeKindDef typeKind_ = global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeKindDef.NoType;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeKindDef TypeKind {
      get { return typeKind_; }
      set {
        typeKind_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 11;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "full_name" field.</summary>
    public const int FullNameFieldNumber = 12;
    private string fullName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FullName {
      get { return fullName_; }
      set {
        fullName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "declaring_type" field.</summary>
    public const int DeclaringTypeFieldNumber = 13;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition declaringType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition DeclaringType {
      get { return declaringType_; }
      set {
        declaringType_ = value;
      }
    }

    /// <summary>Field number for the "attributes" field.</summary>
    public const int AttributesFieldNumber = 15;
    private static readonly pb::FieldCodec<global::Soot.Dotnet.Decompiler.Models.Protobuf.AttributeDefinition> _repeated_attributes_codec
        = pb::FieldCodec.ForMessage(122, global::Soot.Dotnet.Decompiler.Models.Protobuf.AttributeDefinition.Parser);
    private readonly pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.AttributeDefinition> attributes_ = new pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.AttributeDefinition>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.AttributeDefinition> Attributes {
      get { return attributes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FieldDefinition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FieldDefinition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Accessibility != other.Accessibility) return false;
      if (IsAbstract != other.IsAbstract) return false;
      if (IsSealed != other.IsSealed) return false;
      if (IsExplicitInterfaceImplementation != other.IsExplicitInterfaceImplementation) return false;
      if (IsOverride != other.IsOverride) return false;
      if (IsVirtual != other.IsVirtual) return false;
      if (IsConst != other.IsConst) return false;
      if (IsReadOnly != other.IsReadOnly) return false;
      if (IsStatic != other.IsStatic) return false;
      if (!object.Equals(Type, other.Type)) return false;
      if (TypeKind != other.TypeKind) return false;
      if (Name != other.Name) return false;
      if (FullName != other.FullName) return false;
      if (!object.Equals(DeclaringType, other.DeclaringType)) return false;
      if(!attributes_.Equals(other.attributes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Accessibility != global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility.None) hash ^= Accessibility.GetHashCode();
      if (IsAbstract != false) hash ^= IsAbstract.GetHashCode();
      if (IsSealed != false) hash ^= IsSealed.GetHashCode();
      if (IsExplicitInterfaceImplementation != false) hash ^= IsExplicitInterfaceImplementation.GetHashCode();
      if (IsOverride != false) hash ^= IsOverride.GetHashCode();
      if (IsVirtual != false) hash ^= IsVirtual.GetHashCode();
      if (IsConst != false) hash ^= IsConst.GetHashCode();
      if (IsReadOnly != false) hash ^= IsReadOnly.GetHashCode();
      if (IsStatic != false) hash ^= IsStatic.GetHashCode();
      if (type_ != null) hash ^= Type.GetHashCode();
      if (TypeKind != global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeKindDef.NoType) hash ^= TypeKind.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (FullName.Length != 0) hash ^= FullName.GetHashCode();
      if (declaringType_ != null) hash ^= DeclaringType.GetHashCode();
      hash ^= attributes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Accessibility != global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Accessibility);
      }
      if (IsAbstract != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsAbstract);
      }
      if (IsSealed != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsSealed);
      }
      if (IsExplicitInterfaceImplementation != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsExplicitInterfaceImplementation);
      }
      if (IsOverride != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsOverride);
      }
      if (IsVirtual != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsVirtual);
      }
      if (IsConst != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsConst);
      }
      if (IsReadOnly != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsReadOnly);
      }
      if (IsStatic != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsStatic);
      }
      if (type_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Type);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Name);
      }
      if (FullName.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(FullName);
      }
      if (declaringType_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(DeclaringType);
      }
      if (TypeKind != global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeKindDef.NoType) {
        output.WriteRawTag(112);
        output.WriteEnum((int) TypeKind);
      }
      attributes_.WriteTo(output, _repeated_attributes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Accessibility != global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Accessibility);
      }
      if (IsAbstract != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsAbstract);
      }
      if (IsSealed != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsSealed);
      }
      if (IsExplicitInterfaceImplementation != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsExplicitInterfaceImplementation);
      }
      if (IsOverride != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsOverride);
      }
      if (IsVirtual != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsVirtual);
      }
      if (IsConst != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsConst);
      }
      if (IsReadOnly != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsReadOnly);
      }
      if (IsStatic != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsStatic);
      }
      if (type_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Type);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Name);
      }
      if (FullName.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(FullName);
      }
      if (declaringType_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(DeclaringType);
      }
      if (TypeKind != global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeKindDef.NoType) {
        output.WriteRawTag(112);
        output.WriteEnum((int) TypeKind);
      }
      attributes_.WriteTo(ref output, _repeated_attributes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Accessibility != global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Accessibility);
      }
      if (IsAbstract != false) {
        size += 1 + 1;
      }
      if (IsSealed != false) {
        size += 1 + 1;
      }
      if (IsExplicitInterfaceImplementation != false) {
        size += 1 + 1;
      }
      if (IsOverride != false) {
        size += 1 + 1;
      }
      if (IsVirtual != false) {
        size += 1 + 1;
      }
      if (IsConst != false) {
        size += 1 + 1;
      }
      if (IsReadOnly != false) {
        size += 1 + 1;
      }
      if (IsStatic != false) {
        size += 1 + 1;
      }
      if (type_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Type);
      }
      if (TypeKind != global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeKindDef.NoType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TypeKind);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (FullName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FullName);
      }
      if (declaringType_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeclaringType);
      }
      size += attributes_.CalculateSize(_repeated_attributes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FieldDefinition other) {
      if (other == null) {
        return;
      }
      if (other.Accessibility != global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility.None) {
        Accessibility = other.Accessibility;
      }
      if (other.IsAbstract != false) {
        IsAbstract = other.IsAbstract;
      }
      if (other.IsSealed != false) {
        IsSealed = other.IsSealed;
      }
      if (other.IsExplicitInterfaceImplementation != false) {
        IsExplicitInterfaceImplementation = other.IsExplicitInterfaceImplementation;
      }
      if (other.IsOverride != false) {
        IsOverride = other.IsOverride;
      }
      if (other.IsVirtual != false) {
        IsVirtual = other.IsVirtual;
      }
      if (other.IsConst != false) {
        IsConst = other.IsConst;
      }
      if (other.IsReadOnly != false) {
        IsReadOnly = other.IsReadOnly;
      }
      if (other.IsStatic != false) {
        IsStatic = other.IsStatic;
      }
      if (other.type_ != null) {
        if (type_ == null) {
          Type = new global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition();
        }
        Type.MergeFrom(other.Type);
      }
      if (other.TypeKind != global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeKindDef.NoType) {
        TypeKind = other.TypeKind;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.FullName.Length != 0) {
        FullName = other.FullName;
      }
      if (other.declaringType_ != null) {
        if (declaringType_ == null) {
          DeclaringType = new global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition();
        }
        DeclaringType.MergeFrom(other.DeclaringType);
      }
      attributes_.Add(other.attributes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Accessibility = (global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility) input.ReadEnum();
            break;
          }
          case 16: {
            IsAbstract = input.ReadBool();
            break;
          }
          case 24: {
            IsSealed = input.ReadBool();
            break;
          }
          case 32: {
            IsExplicitInterfaceImplementation = input.ReadBool();
            break;
          }
          case 40: {
            IsOverride = input.ReadBool();
            break;
          }
          case 48: {
            IsVirtual = input.ReadBool();
            break;
          }
          case 56: {
            IsConst = input.ReadBool();
            break;
          }
          case 64: {
            IsReadOnly = input.ReadBool();
            break;
          }
          case 72: {
            IsStatic = input.ReadBool();
            break;
          }
          case 82: {
            if (type_ == null) {
              Type = new global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition();
            }
            input.ReadMessage(Type);
            break;
          }
          case 90: {
            Name = input.ReadString();
            break;
          }
          case 98: {
            FullName = input.ReadString();
            break;
          }
          case 106: {
            if (declaringType_ == null) {
              DeclaringType = new global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition();
            }
            input.ReadMessage(DeclaringType);
            break;
          }
          case 112: {
            TypeKind = (global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeKindDef) input.ReadEnum();
            break;
          }
          case 122: {
            attributes_.AddEntriesFrom(input, _repeated_attributes_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Accessibility = (global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility) input.ReadEnum();
            break;
          }
          case 16: {
            IsAbstract = input.ReadBool();
            break;
          }
          case 24: {
            IsSealed = input.ReadBool();
            break;
          }
          case 32: {
            IsExplicitInterfaceImplementation = input.ReadBool();
            break;
          }
          case 40: {
            IsOverride = input.ReadBool();
            break;
          }
          case 48: {
            IsVirtual = input.ReadBool();
            break;
          }
          case 56: {
            IsConst = input.ReadBool();
            break;
          }
          case 64: {
            IsReadOnly = input.ReadBool();
            break;
          }
          case 72: {
            IsStatic = input.ReadBool();
            break;
          }
          case 82: {
            if (type_ == null) {
              Type = new global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition();
            }
            input.ReadMessage(Type);
            break;
          }
          case 90: {
            Name = input.ReadString();
            break;
          }
          case 98: {
            FullName = input.ReadString();
            break;
          }
          case 106: {
            if (declaringType_ == null) {
              DeclaringType = new global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition();
            }
            input.ReadMessage(DeclaringType);
            break;
          }
          case 112: {
            TypeKind = (global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeKindDef) input.ReadEnum();
            break;
          }
          case 122: {
            attributes_.AddEntriesFrom(ref input, _repeated_attributes_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PropertyDefinition : pb::IMessage<PropertyDefinition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PropertyDefinition> _parser = new pb::MessageParser<PropertyDefinition>(() => new PropertyDefinition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PropertyDefinition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Soot.Dotnet.Decompiler.Models.Protobuf.AssemblyAllTypesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertyDefinition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertyDefinition(PropertyDefinition other) : this() {
      accessibility_ = other.accessibility_;
      canGet_ = other.canGet_;
      canSet_ = other.canSet_;
      isAbstract_ = other.isAbstract_;
      isSealed_ = other.isSealed_;
      isExplicitInterfaceImplementation_ = other.isExplicitInterfaceImplementation_;
      isOverride_ = other.isOverride_;
      isVirtual_ = other.isVirtual_;
      isStatic_ = other.isStatic_;
      isExtern_ = other.isExtern_;
      getter_ = other.getter_ != null ? other.getter_.Clone() : null;
      setter_ = other.setter_ != null ? other.setter_.Clone() : null;
      type_ = other.type_ != null ? other.type_.Clone() : null;
      typeKind_ = other.typeKind_;
      name_ = other.name_;
      attributes_ = other.attributes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertyDefinition Clone() {
      return new PropertyDefinition(this);
    }

    /// <summary>Field number for the "accessibility" field.</summary>
    public const int AccessibilityFieldNumber = 1;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility accessibility_ = global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility Accessibility {
      get { return accessibility_; }
      set {
        accessibility_ = value;
      }
    }

    /// <summary>Field number for the "can_get" field.</summary>
    public const int CanGetFieldNumber = 2;
    private bool canGet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanGet {
      get { return canGet_; }
      set {
        canGet_ = value;
      }
    }

    /// <summary>Field number for the "can_set" field.</summary>
    public const int CanSetFieldNumber = 3;
    private bool canSet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanSet {
      get { return canSet_; }
      set {
        canSet_ = value;
      }
    }

    /// <summary>Field number for the "is_abstract" field.</summary>
    public const int IsAbstractFieldNumber = 4;
    private bool isAbstract_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsAbstract {
      get { return isAbstract_; }
      set {
        isAbstract_ = value;
      }
    }

    /// <summary>Field number for the "is_sealed" field.</summary>
    public const int IsSealedFieldNumber = 5;
    private bool isSealed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSealed {
      get { return isSealed_; }
      set {
        isSealed_ = value;
      }
    }

    /// <summary>Field number for the "is_explicit_interface_implementation" field.</summary>
    public const int IsExplicitInterfaceImplementationFieldNumber = 6;
    private bool isExplicitInterfaceImplementation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsExplicitInterfaceImplementation {
      get { return isExplicitInterfaceImplementation_; }
      set {
        isExplicitInterfaceImplementation_ = value;
      }
    }

    /// <summary>Field number for the "is_override" field.</summary>
    public const int IsOverrideFieldNumber = 7;
    private bool isOverride_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsOverride {
      get { return isOverride_; }
      set {
        isOverride_ = value;
      }
    }

    /// <summary>Field number for the "is_virtual" field.</summary>
    public const int IsVirtualFieldNumber = 8;
    private bool isVirtual_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsVirtual {
      get { return isVirtual_; }
      set {
        isVirtual_ = value;
      }
    }

    /// <summary>Field number for the "is_static" field.</summary>
    public const int IsStaticFieldNumber = 9;
    private bool isStatic_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsStatic {
      get { return isStatic_; }
      set {
        isStatic_ = value;
      }
    }

    /// <summary>Field number for the "is_extern" field.</summary>
    public const int IsExternFieldNumber = 15;
    private bool isExtern_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsExtern {
      get { return isExtern_; }
      set {
        isExtern_ = value;
      }
    }

    /// <summary>Field number for the "getter" field.</summary>
    public const int GetterFieldNumber = 10;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.MethodDefinition getter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.MethodDefinition Getter {
      get { return getter_; }
      set {
        getter_ = value;
      }
    }

    /// <summary>Field number for the "setter" field.</summary>
    public const int SetterFieldNumber = 11;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.MethodDefinition setter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.MethodDefinition Setter {
      get { return setter_; }
      set {
        setter_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 12;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "type_kind" field.</summary>
    public const int TypeKindFieldNumber = 14;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeKindDef typeKind_ = global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeKindDef.NoType;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeKindDef TypeKind {
      get { return typeKind_; }
      set {
        typeKind_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 13;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "attributes" field.</summary>
    public const int AttributesFieldNumber = 16;
    private static readonly pb::FieldCodec<global::Soot.Dotnet.Decompiler.Models.Protobuf.AttributeDefinition> _repeated_attributes_codec
        = pb::FieldCodec.ForMessage(130, global::Soot.Dotnet.Decompiler.Models.Protobuf.AttributeDefinition.Parser);
    private readonly pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.AttributeDefinition> attributes_ = new pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.AttributeDefinition>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.AttributeDefinition> Attributes {
      get { return attributes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PropertyDefinition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PropertyDefinition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Accessibility != other.Accessibility) return false;
      if (CanGet != other.CanGet) return false;
      if (CanSet != other.CanSet) return false;
      if (IsAbstract != other.IsAbstract) return false;
      if (IsSealed != other.IsSealed) return false;
      if (IsExplicitInterfaceImplementation != other.IsExplicitInterfaceImplementation) return false;
      if (IsOverride != other.IsOverride) return false;
      if (IsVirtual != other.IsVirtual) return false;
      if (IsStatic != other.IsStatic) return false;
      if (IsExtern != other.IsExtern) return false;
      if (!object.Equals(Getter, other.Getter)) return false;
      if (!object.Equals(Setter, other.Setter)) return false;
      if (!object.Equals(Type, other.Type)) return false;
      if (TypeKind != other.TypeKind) return false;
      if (Name != other.Name) return false;
      if(!attributes_.Equals(other.attributes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Accessibility != global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility.None) hash ^= Accessibility.GetHashCode();
      if (CanGet != false) hash ^= CanGet.GetHashCode();
      if (CanSet != false) hash ^= CanSet.GetHashCode();
      if (IsAbstract != false) hash ^= IsAbstract.GetHashCode();
      if (IsSealed != false) hash ^= IsSealed.GetHashCode();
      if (IsExplicitInterfaceImplementation != false) hash ^= IsExplicitInterfaceImplementation.GetHashCode();
      if (IsOverride != false) hash ^= IsOverride.GetHashCode();
      if (IsVirtual != false) hash ^= IsVirtual.GetHashCode();
      if (IsStatic != false) hash ^= IsStatic.GetHashCode();
      if (IsExtern != false) hash ^= IsExtern.GetHashCode();
      if (getter_ != null) hash ^= Getter.GetHashCode();
      if (setter_ != null) hash ^= Setter.GetHashCode();
      if (type_ != null) hash ^= Type.GetHashCode();
      if (TypeKind != global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeKindDef.NoType) hash ^= TypeKind.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= attributes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Accessibility != global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Accessibility);
      }
      if (CanGet != false) {
        output.WriteRawTag(16);
        output.WriteBool(CanGet);
      }
      if (CanSet != false) {
        output.WriteRawTag(24);
        output.WriteBool(CanSet);
      }
      if (IsAbstract != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsAbstract);
      }
      if (IsSealed != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsSealed);
      }
      if (IsExplicitInterfaceImplementation != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsExplicitInterfaceImplementation);
      }
      if (IsOverride != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsOverride);
      }
      if (IsVirtual != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsVirtual);
      }
      if (IsStatic != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsStatic);
      }
      if (getter_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Getter);
      }
      if (setter_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Setter);
      }
      if (type_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Type);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Name);
      }
      if (TypeKind != global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeKindDef.NoType) {
        output.WriteRawTag(112);
        output.WriteEnum((int) TypeKind);
      }
      if (IsExtern != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsExtern);
      }
      attributes_.WriteTo(output, _repeated_attributes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Accessibility != global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Accessibility);
      }
      if (CanGet != false) {
        output.WriteRawTag(16);
        output.WriteBool(CanGet);
      }
      if (CanSet != false) {
        output.WriteRawTag(24);
        output.WriteBool(CanSet);
      }
      if (IsAbstract != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsAbstract);
      }
      if (IsSealed != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsSealed);
      }
      if (IsExplicitInterfaceImplementation != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsExplicitInterfaceImplementation);
      }
      if (IsOverride != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsOverride);
      }
      if (IsVirtual != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsVirtual);
      }
      if (IsStatic != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsStatic);
      }
      if (getter_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Getter);
      }
      if (setter_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Setter);
      }
      if (type_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Type);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Name);
      }
      if (TypeKind != global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeKindDef.NoType) {
        output.WriteRawTag(112);
        output.WriteEnum((int) TypeKind);
      }
      if (IsExtern != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsExtern);
      }
      attributes_.WriteTo(ref output, _repeated_attributes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Accessibility != global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Accessibility);
      }
      if (CanGet != false) {
        size += 1 + 1;
      }
      if (CanSet != false) {
        size += 1 + 1;
      }
      if (IsAbstract != false) {
        size += 1 + 1;
      }
      if (IsSealed != false) {
        size += 1 + 1;
      }
      if (IsExplicitInterfaceImplementation != false) {
        size += 1 + 1;
      }
      if (IsOverride != false) {
        size += 1 + 1;
      }
      if (IsVirtual != false) {
        size += 1 + 1;
      }
      if (IsStatic != false) {
        size += 1 + 1;
      }
      if (IsExtern != false) {
        size += 1 + 1;
      }
      if (getter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Getter);
      }
      if (setter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Setter);
      }
      if (type_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Type);
      }
      if (TypeKind != global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeKindDef.NoType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TypeKind);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += attributes_.CalculateSize(_repeated_attributes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PropertyDefinition other) {
      if (other == null) {
        return;
      }
      if (other.Accessibility != global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility.None) {
        Accessibility = other.Accessibility;
      }
      if (other.CanGet != false) {
        CanGet = other.CanGet;
      }
      if (other.CanSet != false) {
        CanSet = other.CanSet;
      }
      if (other.IsAbstract != false) {
        IsAbstract = other.IsAbstract;
      }
      if (other.IsSealed != false) {
        IsSealed = other.IsSealed;
      }
      if (other.IsExplicitInterfaceImplementation != false) {
        IsExplicitInterfaceImplementation = other.IsExplicitInterfaceImplementation;
      }
      if (other.IsOverride != false) {
        IsOverride = other.IsOverride;
      }
      if (other.IsVirtual != false) {
        IsVirtual = other.IsVirtual;
      }
      if (other.IsStatic != false) {
        IsStatic = other.IsStatic;
      }
      if (other.IsExtern != false) {
        IsExtern = other.IsExtern;
      }
      if (other.getter_ != null) {
        if (getter_ == null) {
          Getter = new global::Soot.Dotnet.Decompiler.Models.Protobuf.MethodDefinition();
        }
        Getter.MergeFrom(other.Getter);
      }
      if (other.setter_ != null) {
        if (setter_ == null) {
          Setter = new global::Soot.Dotnet.Decompiler.Models.Protobuf.MethodDefinition();
        }
        Setter.MergeFrom(other.Setter);
      }
      if (other.type_ != null) {
        if (type_ == null) {
          Type = new global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition();
        }
        Type.MergeFrom(other.Type);
      }
      if (other.TypeKind != global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeKindDef.NoType) {
        TypeKind = other.TypeKind;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      attributes_.Add(other.attributes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Accessibility = (global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility) input.ReadEnum();
            break;
          }
          case 16: {
            CanGet = input.ReadBool();
            break;
          }
          case 24: {
            CanSet = input.ReadBool();
            break;
          }
          case 32: {
            IsAbstract = input.ReadBool();
            break;
          }
          case 40: {
            IsSealed = input.ReadBool();
            break;
          }
          case 48: {
            IsExplicitInterfaceImplementation = input.ReadBool();
            break;
          }
          case 56: {
            IsOverride = input.ReadBool();
            break;
          }
          case 64: {
            IsVirtual = input.ReadBool();
            break;
          }
          case 72: {
            IsStatic = input.ReadBool();
            break;
          }
          case 82: {
            if (getter_ == null) {
              Getter = new global::Soot.Dotnet.Decompiler.Models.Protobuf.MethodDefinition();
            }
            input.ReadMessage(Getter);
            break;
          }
          case 90: {
            if (setter_ == null) {
              Setter = new global::Soot.Dotnet.Decompiler.Models.Protobuf.MethodDefinition();
            }
            input.ReadMessage(Setter);
            break;
          }
          case 98: {
            if (type_ == null) {
              Type = new global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition();
            }
            input.ReadMessage(Type);
            break;
          }
          case 106: {
            Name = input.ReadString();
            break;
          }
          case 112: {
            TypeKind = (global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeKindDef) input.ReadEnum();
            break;
          }
          case 120: {
            IsExtern = input.ReadBool();
            break;
          }
          case 130: {
            attributes_.AddEntriesFrom(input, _repeated_attributes_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Accessibility = (global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility) input.ReadEnum();
            break;
          }
          case 16: {
            CanGet = input.ReadBool();
            break;
          }
          case 24: {
            CanSet = input.ReadBool();
            break;
          }
          case 32: {
            IsAbstract = input.ReadBool();
            break;
          }
          case 40: {
            IsSealed = input.ReadBool();
            break;
          }
          case 48: {
            IsExplicitInterfaceImplementation = input.ReadBool();
            break;
          }
          case 56: {
            IsOverride = input.ReadBool();
            break;
          }
          case 64: {
            IsVirtual = input.ReadBool();
            break;
          }
          case 72: {
            IsStatic = input.ReadBool();
            break;
          }
          case 82: {
            if (getter_ == null) {
              Getter = new global::Soot.Dotnet.Decompiler.Models.Protobuf.MethodDefinition();
            }
            input.ReadMessage(Getter);
            break;
          }
          case 90: {
            if (setter_ == null) {
              Setter = new global::Soot.Dotnet.Decompiler.Models.Protobuf.MethodDefinition();
            }
            input.ReadMessage(Setter);
            break;
          }
          case 98: {
            if (type_ == null) {
              Type = new global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition();
            }
            input.ReadMessage(Type);
            break;
          }
          case 106: {
            Name = input.ReadString();
            break;
          }
          case 112: {
            TypeKind = (global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeKindDef) input.ReadEnum();
            break;
          }
          case 120: {
            IsExtern = input.ReadBool();
            break;
          }
          case 130: {
            attributes_.AddEntriesFrom(ref input, _repeated_attributes_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  ///C# Attributes of a method (square brackets above method head)
  /// </summary>
  public sealed partial class AttributeDefinition : pb::IMessage<AttributeDefinition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AttributeDefinition> _parser = new pb::MessageParser<AttributeDefinition>(() => new AttributeDefinition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AttributeDefinition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Soot.Dotnet.Decompiler.Models.Protobuf.AssemblyAllTypesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttributeDefinition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttributeDefinition(AttributeDefinition other) : this() {
      attributeType_ = other.attributeType_ != null ? other.attributeType_.Clone() : null;
      constructor_ = other.constructor_;
      fixedArguments_ = other.fixedArguments_.Clone();
      namedArguments_ = other.namedArguments_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttributeDefinition Clone() {
      return new AttributeDefinition(this);
    }

    /// <summary>Field number for the "attribute_type" field.</summary>
    public const int AttributeTypeFieldNumber = 1;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition attributeType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition AttributeType {
      get { return attributeType_; }
      set {
        attributeType_ = value;
      }
    }

    /// <summary>Field number for the "constructor" field.</summary>
    public const int ConstructorFieldNumber = 2;
    private string constructor_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Constructor {
      get { return constructor_; }
      set {
        constructor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fixed_arguments" field.</summary>
    public const int FixedArgumentsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Soot.Dotnet.Decompiler.Models.Protobuf.AttributeArgumentDefinition> _repeated_fixedArguments_codec
        = pb::FieldCodec.ForMessage(26, global::Soot.Dotnet.Decompiler.Models.Protobuf.AttributeArgumentDefinition.Parser);
    private readonly pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.AttributeArgumentDefinition> fixedArguments_ = new pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.AttributeArgumentDefinition>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.AttributeArgumentDefinition> FixedArguments {
      get { return fixedArguments_; }
    }

    /// <summary>Field number for the "named_arguments" field.</summary>
    public const int NamedArgumentsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Soot.Dotnet.Decompiler.Models.Protobuf.AttributeArgumentDefinition> _repeated_namedArguments_codec
        = pb::FieldCodec.ForMessage(34, global::Soot.Dotnet.Decompiler.Models.Protobuf.AttributeArgumentDefinition.Parser);
    private readonly pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.AttributeArgumentDefinition> namedArguments_ = new pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.AttributeArgumentDefinition>();
    /// <summary>
    /// ILspy uses fixed arg
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.AttributeArgumentDefinition> NamedArguments {
      get { return namedArguments_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AttributeDefinition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AttributeDefinition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AttributeType, other.AttributeType)) return false;
      if (Constructor != other.Constructor) return false;
      if(!fixedArguments_.Equals(other.fixedArguments_)) return false;
      if(!namedArguments_.Equals(other.namedArguments_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (attributeType_ != null) hash ^= AttributeType.GetHashCode();
      if (Constructor.Length != 0) hash ^= Constructor.GetHashCode();
      hash ^= fixedArguments_.GetHashCode();
      hash ^= namedArguments_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (attributeType_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AttributeType);
      }
      if (Constructor.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Constructor);
      }
      fixedArguments_.WriteTo(output, _repeated_fixedArguments_codec);
      namedArguments_.WriteTo(output, _repeated_namedArguments_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (attributeType_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AttributeType);
      }
      if (Constructor.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Constructor);
      }
      fixedArguments_.WriteTo(ref output, _repeated_fixedArguments_codec);
      namedArguments_.WriteTo(ref output, _repeated_namedArguments_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (attributeType_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AttributeType);
      }
      if (Constructor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Constructor);
      }
      size += fixedArguments_.CalculateSize(_repeated_fixedArguments_codec);
      size += namedArguments_.CalculateSize(_repeated_namedArguments_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AttributeDefinition other) {
      if (other == null) {
        return;
      }
      if (other.attributeType_ != null) {
        if (attributeType_ == null) {
          AttributeType = new global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition();
        }
        AttributeType.MergeFrom(other.AttributeType);
      }
      if (other.Constructor.Length != 0) {
        Constructor = other.Constructor;
      }
      fixedArguments_.Add(other.fixedArguments_);
      namedArguments_.Add(other.namedArguments_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (attributeType_ == null) {
              AttributeType = new global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition();
            }
            input.ReadMessage(AttributeType);
            break;
          }
          case 18: {
            Constructor = input.ReadString();
            break;
          }
          case 26: {
            fixedArguments_.AddEntriesFrom(input, _repeated_fixedArguments_codec);
            break;
          }
          case 34: {
            namedArguments_.AddEntriesFrom(input, _repeated_namedArguments_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (attributeType_ == null) {
              AttributeType = new global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition();
            }
            input.ReadMessage(AttributeType);
            break;
          }
          case 18: {
            Constructor = input.ReadString();
            break;
          }
          case 26: {
            fixedArguments_.AddEntriesFrom(ref input, _repeated_fixedArguments_codec);
            break;
          }
          case 34: {
            namedArguments_.AddEntriesFrom(ref input, _repeated_namedArguments_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AttributeArgumentDefinition : pb::IMessage<AttributeArgumentDefinition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AttributeArgumentDefinition> _parser = new pb::MessageParser<AttributeArgumentDefinition>(() => new AttributeArgumentDefinition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AttributeArgumentDefinition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Soot.Dotnet.Decompiler.Models.Protobuf.AssemblyAllTypesReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttributeArgumentDefinition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttributeArgumentDefinition(AttributeArgumentDefinition other) : this() {
      type_ = other.type_ != null ? other.type_.Clone() : null;
      name_ = other.name_;
      valueString_ = other.valueString_.Clone();
      valueInt32_ = other.valueInt32_.Clone();
      valueInt64_ = other.valueInt64_.Clone();
      valueDouble_ = other.valueDouble_.Clone();
      valueFloat_ = other.valueFloat_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttributeArgumentDefinition Clone() {
      return new AttributeArgumentDefinition(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value_string" field.</summary>
    public const int ValueStringFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_valueString_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> valueString_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ValueString {
      get { return valueString_; }
    }

    /// <summary>Field number for the "value_int32" field.</summary>
    public const int ValueInt32FieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_valueInt32_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> valueInt32_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ValueInt32 {
      get { return valueInt32_; }
    }

    /// <summary>Field number for the "value_int64" field.</summary>
    public const int ValueInt64FieldNumber = 5;
    private static readonly pb::FieldCodec<long> _repeated_valueInt64_codec
        = pb::FieldCodec.ForInt64(42);
    private readonly pbc::RepeatedField<long> valueInt64_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> ValueInt64 {
      get { return valueInt64_; }
    }

    /// <summary>Field number for the "value_double" field.</summary>
    public const int ValueDoubleFieldNumber = 6;
    private static readonly pb::FieldCodec<double> _repeated_valueDouble_codec
        = pb::FieldCodec.ForDouble(50);
    private readonly pbc::RepeatedField<double> valueDouble_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<double> ValueDouble {
      get { return valueDouble_; }
    }

    /// <summary>Field number for the "value_float" field.</summary>
    public const int ValueFloatFieldNumber = 7;
    private static readonly pb::FieldCodec<float> _repeated_valueFloat_codec
        = pb::FieldCodec.ForFloat(58);
    private readonly pbc::RepeatedField<float> valueFloat_ = new pbc::RepeatedField<float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> ValueFloat {
      get { return valueFloat_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AttributeArgumentDefinition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AttributeArgumentDefinition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Type, other.Type)) return false;
      if (Name != other.Name) return false;
      if(!valueString_.Equals(other.valueString_)) return false;
      if(!valueInt32_.Equals(other.valueInt32_)) return false;
      if(!valueInt64_.Equals(other.valueInt64_)) return false;
      if(!valueDouble_.Equals(other.valueDouble_)) return false;
      if(!valueFloat_.Equals(other.valueFloat_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (type_ != null) hash ^= Type.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= valueString_.GetHashCode();
      hash ^= valueInt32_.GetHashCode();
      hash ^= valueInt64_.GetHashCode();
      hash ^= valueDouble_.GetHashCode();
      hash ^= valueFloat_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (type_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Type);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      valueString_.WriteTo(output, _repeated_valueString_codec);
      valueInt32_.WriteTo(output, _repeated_valueInt32_codec);
      valueInt64_.WriteTo(output, _repeated_valueInt64_codec);
      valueDouble_.WriteTo(output, _repeated_valueDouble_codec);
      valueFloat_.WriteTo(output, _repeated_valueFloat_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (type_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Type);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      valueString_.WriteTo(ref output, _repeated_valueString_codec);
      valueInt32_.WriteTo(ref output, _repeated_valueInt32_codec);
      valueInt64_.WriteTo(ref output, _repeated_valueInt64_codec);
      valueDouble_.WriteTo(ref output, _repeated_valueDouble_codec);
      valueFloat_.WriteTo(ref output, _repeated_valueFloat_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (type_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Type);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += valueString_.CalculateSize(_repeated_valueString_codec);
      size += valueInt32_.CalculateSize(_repeated_valueInt32_codec);
      size += valueInt64_.CalculateSize(_repeated_valueInt64_codec);
      size += valueDouble_.CalculateSize(_repeated_valueDouble_codec);
      size += valueFloat_.CalculateSize(_repeated_valueFloat_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AttributeArgumentDefinition other) {
      if (other == null) {
        return;
      }
      if (other.type_ != null) {
        if (type_ == null) {
          Type = new global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition();
        }
        Type.MergeFrom(other.Type);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      valueString_.Add(other.valueString_);
      valueInt32_.Add(other.valueInt32_);
      valueInt64_.Add(other.valueInt64_);
      valueDouble_.Add(other.valueDouble_);
      valueFloat_.Add(other.valueFloat_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (type_ == null) {
              Type = new global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition();
            }
            input.ReadMessage(Type);
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            valueString_.AddEntriesFrom(input, _repeated_valueString_codec);
            break;
          }
          case 34:
          case 32: {
            valueInt32_.AddEntriesFrom(input, _repeated_valueInt32_codec);
            break;
          }
          case 42:
          case 40: {
            valueInt64_.AddEntriesFrom(input, _repeated_valueInt64_codec);
            break;
          }
          case 50:
          case 49: {
            valueDouble_.AddEntriesFrom(input, _repeated_valueDouble_codec);
            break;
          }
          case 58:
          case 61: {
            valueFloat_.AddEntriesFrom(input, _repeated_valueFloat_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (type_ == null) {
              Type = new global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition();
            }
            input.ReadMessage(Type);
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            valueString_.AddEntriesFrom(ref input, _repeated_valueString_codec);
            break;
          }
          case 34:
          case 32: {
            valueInt32_.AddEntriesFrom(ref input, _repeated_valueInt32_codec);
            break;
          }
          case 42:
          case 40: {
            valueInt64_.AddEntriesFrom(ref input, _repeated_valueInt64_codec);
            break;
          }
          case 50:
          case 49: {
            valueDouble_.AddEntriesFrom(ref input, _repeated_valueDouble_codec);
            break;
          }
          case 58:
          case 61: {
            valueFloat_.AddEntriesFrom(ref input, _repeated_valueFloat_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventDefinition : pb::IMessage<EventDefinition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventDefinition> _parser = new pb::MessageParser<EventDefinition>(() => new EventDefinition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventDefinition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Soot.Dotnet.Decompiler.Models.Protobuf.AssemblyAllTypesReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventDefinition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventDefinition(EventDefinition other) : this() {
      accessibility_ = other.accessibility_;
      addAccessorMethod_ = other.addAccessorMethod_ != null ? other.addAccessorMethod_.Clone() : null;
      canAdd_ = other.canAdd_;
      canInvoke_ = other.canInvoke_;
      canRemove_ = other.canRemove_;
      fullName_ = other.fullName_;
      invokeAccessorMethod_ = other.invokeAccessorMethod_ != null ? other.invokeAccessorMethod_.Clone() : null;
      name_ = other.name_;
      removeAccessorMethod_ = other.removeAccessorMethod_ != null ? other.removeAccessorMethod_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventDefinition Clone() {
      return new EventDefinition(this);
    }

    /// <summary>Field number for the "accessibility" field.</summary>
    public const int AccessibilityFieldNumber = 1;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility accessibility_ = global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility Accessibility {
      get { return accessibility_; }
      set {
        accessibility_ = value;
      }
    }

    /// <summary>Field number for the "add_accessor_method" field.</summary>
    public const int AddAccessorMethodFieldNumber = 2;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.MethodDefinition addAccessorMethod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.MethodDefinition AddAccessorMethod {
      get { return addAccessorMethod_; }
      set {
        addAccessorMethod_ = value;
      }
    }

    /// <summary>Field number for the "can_add" field.</summary>
    public const int CanAddFieldNumber = 3;
    private bool canAdd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanAdd {
      get { return canAdd_; }
      set {
        canAdd_ = value;
      }
    }

    /// <summary>Field number for the "can_invoke" field.</summary>
    public const int CanInvokeFieldNumber = 4;
    private bool canInvoke_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanInvoke {
      get { return canInvoke_; }
      set {
        canInvoke_ = value;
      }
    }

    /// <summary>Field number for the "can_remove" field.</summary>
    public const int CanRemoveFieldNumber = 5;
    private bool canRemove_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanRemove {
      get { return canRemove_; }
      set {
        canRemove_ = value;
      }
    }

    /// <summary>Field number for the "full_name" field.</summary>
    public const int FullNameFieldNumber = 6;
    private string fullName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FullName {
      get { return fullName_; }
      set {
        fullName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "invoke_accessor_method" field.</summary>
    public const int InvokeAccessorMethodFieldNumber = 7;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.MethodDefinition invokeAccessorMethod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.MethodDefinition InvokeAccessorMethod {
      get { return invokeAccessorMethod_; }
      set {
        invokeAccessorMethod_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 8;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "remove_accessor_method" field.</summary>
    public const int RemoveAccessorMethodFieldNumber = 9;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.MethodDefinition removeAccessorMethod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.MethodDefinition RemoveAccessorMethod {
      get { return removeAccessorMethod_; }
      set {
        removeAccessorMethod_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventDefinition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventDefinition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Accessibility != other.Accessibility) return false;
      if (!object.Equals(AddAccessorMethod, other.AddAccessorMethod)) return false;
      if (CanAdd != other.CanAdd) return false;
      if (CanInvoke != other.CanInvoke) return false;
      if (CanRemove != other.CanRemove) return false;
      if (FullName != other.FullName) return false;
      if (!object.Equals(InvokeAccessorMethod, other.InvokeAccessorMethod)) return false;
      if (Name != other.Name) return false;
      if (!object.Equals(RemoveAccessorMethod, other.RemoveAccessorMethod)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Accessibility != global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility.None) hash ^= Accessibility.GetHashCode();
      if (addAccessorMethod_ != null) hash ^= AddAccessorMethod.GetHashCode();
      if (CanAdd != false) hash ^= CanAdd.GetHashCode();
      if (CanInvoke != false) hash ^= CanInvoke.GetHashCode();
      if (CanRemove != false) hash ^= CanRemove.GetHashCode();
      if (FullName.Length != 0) hash ^= FullName.GetHashCode();
      if (invokeAccessorMethod_ != null) hash ^= InvokeAccessorMethod.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (removeAccessorMethod_ != null) hash ^= RemoveAccessorMethod.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Accessibility != global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Accessibility);
      }
      if (addAccessorMethod_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AddAccessorMethod);
      }
      if (CanAdd != false) {
        output.WriteRawTag(24);
        output.WriteBool(CanAdd);
      }
      if (CanInvoke != false) {
        output.WriteRawTag(32);
        output.WriteBool(CanInvoke);
      }
      if (CanRemove != false) {
        output.WriteRawTag(40);
        output.WriteBool(CanRemove);
      }
      if (FullName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(FullName);
      }
      if (invokeAccessorMethod_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(InvokeAccessorMethod);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Name);
      }
      if (removeAccessorMethod_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(RemoveAccessorMethod);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Accessibility != global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Accessibility);
      }
      if (addAccessorMethod_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AddAccessorMethod);
      }
      if (CanAdd != false) {
        output.WriteRawTag(24);
        output.WriteBool(CanAdd);
      }
      if (CanInvoke != false) {
        output.WriteRawTag(32);
        output.WriteBool(CanInvoke);
      }
      if (CanRemove != false) {
        output.WriteRawTag(40);
        output.WriteBool(CanRemove);
      }
      if (FullName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(FullName);
      }
      if (invokeAccessorMethod_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(InvokeAccessorMethod);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Name);
      }
      if (removeAccessorMethod_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(RemoveAccessorMethod);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Accessibility != global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Accessibility);
      }
      if (addAccessorMethod_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddAccessorMethod);
      }
      if (CanAdd != false) {
        size += 1 + 1;
      }
      if (CanInvoke != false) {
        size += 1 + 1;
      }
      if (CanRemove != false) {
        size += 1 + 1;
      }
      if (FullName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FullName);
      }
      if (invokeAccessorMethod_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InvokeAccessorMethod);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (removeAccessorMethod_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RemoveAccessorMethod);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventDefinition other) {
      if (other == null) {
        return;
      }
      if (other.Accessibility != global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility.None) {
        Accessibility = other.Accessibility;
      }
      if (other.addAccessorMethod_ != null) {
        if (addAccessorMethod_ == null) {
          AddAccessorMethod = new global::Soot.Dotnet.Decompiler.Models.Protobuf.MethodDefinition();
        }
        AddAccessorMethod.MergeFrom(other.AddAccessorMethod);
      }
      if (other.CanAdd != false) {
        CanAdd = other.CanAdd;
      }
      if (other.CanInvoke != false) {
        CanInvoke = other.CanInvoke;
      }
      if (other.CanRemove != false) {
        CanRemove = other.CanRemove;
      }
      if (other.FullName.Length != 0) {
        FullName = other.FullName;
      }
      if (other.invokeAccessorMethod_ != null) {
        if (invokeAccessorMethod_ == null) {
          InvokeAccessorMethod = new global::Soot.Dotnet.Decompiler.Models.Protobuf.MethodDefinition();
        }
        InvokeAccessorMethod.MergeFrom(other.InvokeAccessorMethod);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.removeAccessorMethod_ != null) {
        if (removeAccessorMethod_ == null) {
          RemoveAccessorMethod = new global::Soot.Dotnet.Decompiler.Models.Protobuf.MethodDefinition();
        }
        RemoveAccessorMethod.MergeFrom(other.RemoveAccessorMethod);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Accessibility = (global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility) input.ReadEnum();
            break;
          }
          case 18: {
            if (addAccessorMethod_ == null) {
              AddAccessorMethod = new global::Soot.Dotnet.Decompiler.Models.Protobuf.MethodDefinition();
            }
            input.ReadMessage(AddAccessorMethod);
            break;
          }
          case 24: {
            CanAdd = input.ReadBool();
            break;
          }
          case 32: {
            CanInvoke = input.ReadBool();
            break;
          }
          case 40: {
            CanRemove = input.ReadBool();
            break;
          }
          case 50: {
            FullName = input.ReadString();
            break;
          }
          case 58: {
            if (invokeAccessorMethod_ == null) {
              InvokeAccessorMethod = new global::Soot.Dotnet.Decompiler.Models.Protobuf.MethodDefinition();
            }
            input.ReadMessage(InvokeAccessorMethod);
            break;
          }
          case 66: {
            Name = input.ReadString();
            break;
          }
          case 74: {
            if (removeAccessorMethod_ == null) {
              RemoveAccessorMethod = new global::Soot.Dotnet.Decompiler.Models.Protobuf.MethodDefinition();
            }
            input.ReadMessage(RemoveAccessorMethod);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Accessibility = (global::Soot.Dotnet.Decompiler.Models.Protobuf.Accessibility) input.ReadEnum();
            break;
          }
          case 18: {
            if (addAccessorMethod_ == null) {
              AddAccessorMethod = new global::Soot.Dotnet.Decompiler.Models.Protobuf.MethodDefinition();
            }
            input.ReadMessage(AddAccessorMethod);
            break;
          }
          case 24: {
            CanAdd = input.ReadBool();
            break;
          }
          case 32: {
            CanInvoke = input.ReadBool();
            break;
          }
          case 40: {
            CanRemove = input.ReadBool();
            break;
          }
          case 50: {
            FullName = input.ReadString();
            break;
          }
          case 58: {
            if (invokeAccessorMethod_ == null) {
              InvokeAccessorMethod = new global::Soot.Dotnet.Decompiler.Models.Protobuf.MethodDefinition();
            }
            input.ReadMessage(InvokeAccessorMethod);
            break;
          }
          case 66: {
            Name = input.ReadString();
            break;
          }
          case 74: {
            if (removeAccessorMethod_ == null) {
              RemoveAccessorMethod = new global::Soot.Dotnet.Decompiler.Models.Protobuf.MethodDefinition();
            }
            input.ReadMessage(RemoveAccessorMethod);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
