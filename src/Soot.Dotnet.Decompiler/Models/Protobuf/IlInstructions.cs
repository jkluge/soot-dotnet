// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: IlInstructions.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Soot.Dotnet.Decompiler.Models.Protobuf {

  /// <summary>Holder for reflection information generated from IlInstructions.proto</summary>
  public static partial class IlInstructionsReflection {

    #region Descriptor
    /// <summary>File descriptor for IlInstructions.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static IlInstructionsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRJbEluc3RydWN0aW9ucy5wcm90bxoWQXNzZW1ibHlBbGxUeXBlcy5wcm90",
            "byJWCg1JbEZ1bmN0aW9uTXNnEiIKBGJvZHkYASABKAsyFC5JbEJsb2NrQ29u",
            "dGFpbmVyTXNnEiEKCXZhcmlhYmxlcxgCIAMoCzIOLklsVmFyaWFibGVNc2ci",
            "LwoTSWxCbG9ja0NvbnRhaW5lck1zZxIYCgZibG9ja3MYASADKAsyCC5JbEJs",
            "b2NrIlEKB0lsQmxvY2sSMgoXbGlzdF9vZl9pbF9pbnN0cnVjdGlvbnMYASAD",
            "KAsyES5JbEluc3RydWN0aW9uTXNnEhIKCmJsb2NrX25hbWUYAiABKAkiphoK",
            "EElsSW5zdHJ1Y3Rpb25Nc2cSKwoHb3BfY29kZRgBIAEoDjIaLklsSW5zdHJ1",
            "Y3Rpb25Nc2cuSWxPcENvZGUSIQoGbWV0aG9kGAQgASgLMhEuTWV0aG9kRGVm",
            "aW5pdGlvbhIkCglhcmd1bWVudHMYBSADKAsyES5JbEluc3RydWN0aW9uTXNn",
            "EiwKEXZhbHVlX2luc3RydWN0aW9uGAYgASgLMhEuSWxJbnN0cnVjdGlvbk1z",
            "ZxIdChV2YWx1ZV9jb25zdGFudF9zdHJpbmcYByABKAkSHAoUdmFsdWVfY29u",
            "c3RhbnRfaW50MzIYECABKAUSHAoUdmFsdWVfY29uc3RhbnRfaW50NjQYJiAB",
            "KAMSHAoUdmFsdWVfY29uc3RhbnRfZmxvYXQYJyABKAISHQoVdmFsdWVfY29u",
            "c3RhbnRfZG91YmxlGCggASgBEiEKBnRhcmdldBgIIAEoCzIRLklsSW5zdHJ1",
            "Y3Rpb25Nc2cSHQoEdHlwZRgJIAEoCzIPLlR5cGVEZWZpbml0aW9uEh8KBWZp",
            "ZWxkGAogASgLMhAuRmllbGREZWZpbml0aW9uEiAKCHZhcmlhYmxlGAsgASgL",
            "Mg4uSWxWYXJpYWJsZU1zZxI7CghvcGVyYXRvchgMIAEoDjIpLklsSW5zdHJ1",
            "Y3Rpb25Nc2cuSWxCaW5hcnlOdW1lcmljT3BlcmF0b3ISJgoEc2lnbhgUIAEo",
            "DjIYLklsSW5zdHJ1Y3Rpb25Nc2cuSWxTaWduEh8KBGxlZnQYDiABKAsyES5J",
            "bEluc3RydWN0aW9uTXNnEiAKBXJpZ2h0GA8gASgLMhEuSWxJbnN0cnVjdGlv",
            "bk1zZxIUCgx0YXJnZXRfbGFiZWwYEiABKAkSOwoPY29tcGFyaXNvbl9raW5k",
            "GBUgASgOMiIuSWxJbnN0cnVjdGlvbk1zZy5JbENvbXBhcmlzb25LaW5kEiQK",
            "CWNvbmRpdGlvbhgWIAEoCzIRLklsSW5zdHJ1Y3Rpb25Nc2cSJAoJdHJ1ZV9p",
            "bnN0GBcgASgLMhEuSWxJbnN0cnVjdGlvbk1zZxIlCgpmYWxzZV9pbnN0GBgg",
            "ASgLMhEuSWxJbnN0cnVjdGlvbk1zZxIgCgVhcnJheRgeIAEoCzIRLklsSW5z",
            "dHJ1Y3Rpb25Nc2cSOwoPY29udmVyc2lvbl9raW5kGBkgASgOMiIuSWxJbnN0",
            "cnVjdGlvbk1zZy5JbENvbnZlcnNpb25LaW5kEjEKCmlucHV0X3R5cGUYGiAB",
            "KA4yHS5JbEluc3RydWN0aW9uTXNnLklsU3RhY2tUeXBlEjYKC3RhcmdldF90",
            "eXBlGBwgASgOMiEuSWxJbnN0cnVjdGlvbk1zZy5JbFByaW1pdGl2ZVR5cGUS",
            "IwoIYXJndW1lbnQYHSABKAsyES5JbEluc3RydWN0aW9uTXNnEjIKC3Jlc3Vs",
            "dF90eXBlGBsgASgOMh0uSWxJbnN0cnVjdGlvbk1zZy5JbFN0YWNrVHlwZRIi",
            "CgdpbmRpY2VzGB8gAygLMhEuSWxJbnN0cnVjdGlvbk1zZxInCgl0cnlfYmxv",
            "Y2sYICABKAsyFC5JbEJsb2NrQ29udGFpbmVyTXNnEicKCGhhbmRsZXJzGCEg",
            "AygLMhUuSWxUcnlDYXRjaEhhbmRsZXJNc2cSKwoNZmluYWxseV9ibG9jaxgi",
            "IAEoCzIULklsQmxvY2tDb250YWluZXJNc2cSKQoLZmF1bHRfYmxvY2sYIyAB",
            "KAsyFC5JbEJsb2NrQ29udGFpbmVyTXNnEiIKBGJvZHkYJSABKAsyFC5JbEJs",
            "b2NrQ29udGFpbmVyTXNnEiQKCWtleV9pbnN0chgpIAEoCzIRLklsSW5zdHJ1",
            "Y3Rpb25Nc2cSJwoMZGVmYXVsdF9pbnN0GCogASgLMhEuSWxJbnN0cnVjdGlv",
            "bk1zZxIsCg9zd2l0Y2hfc2VjdGlvbnMYKyADKAsyEy5JbFN3aXRjaFNlY3Rp",
            "b25Nc2ciywcKCElsT3BDb2RlEgsKB05PTkVfT1AQABIHCgNOT1AQARIICgRD",
            "QUxMEAQSCQoFTEVBVkUQBRIJCgVMRFNUUhAGEgkKBVNUT0JKEAcSCgoGTERG",
            "TERBEAgSCgoGTERDX0k0EAkSCQoFTERMT0MQChIJCgVMRE9CShALEgkKBVNU",
            "TE9DEAwSCgoGTkVXT0JKEA0SDAoIQ0FMTFZJUlQQDhIeChpCSU5BUllfTlVN",
            "RVJJQ19JTlNUUlVDVElPThAPEgoKBkJSQU5DSBAQEggKBENPTVAQERISCg5J",
            "Rl9JTlNUUlVDVElPThASEgsKB0xEU0ZMREEQExIKCgZMRE5VTEwQFBIJCgVM",
            "RExFThAVEggKBENPTlYQFhIKCgZORVdBUlIQFxILCgdMREVMRU1BEBgSDQoJ",
            "Q0FTVENMQVNTEBkSCgoGSVNJTlNUEBoSBwoDQk9YEBsSDAoIVU5CT1hBTlkQ",
            "HBIJCgVVTkJPWBAdEg0KCVRSWV9DQVRDSBAeEgoKBkxETE9DQRAfEhEKDURF",
            "RkFVTFRfVkFMVUUQIBIHCgNOT1QQIRIPCgtUUllfRklOQUxMWRAiEg0KCVRS",
            "WV9GQVVMVBAjEhMKD0JMT0NLX0NPTlRBSU5FUhAkEgkKBUJMT0NLECUSFQoR",
            "VFJZX0NBVENIX0hBTkRMRVIQJhILCgdSRVRIUk9XECcSCQoFVEhST1cQKBIP",
            "CgtERUJVR19CUkVBSxApEg0KCUNLX0ZJTklURRAqEgoKBkNQX0JMSxAsEgoK",
            "BkNQX09CShAtEgcKA0RVUBAuEgwKCElOSVRfQkxLEC8SDAoISU5JVF9PQkoQ",
            "MBIKCgZMRENfSTgQMRIKCgZMRENfUjQQMhIKCgZMRENfUjgQMxIKCgZMRF9G",
            "TEQQNBIKCgZMRF9GVE4QNRILCgdMRF9TRkxEEDYSDAoITERfVE9LRU4QNxIP",
            "CgtMRF9WSVJUX0ZUThA4Eg0KCUxPQ19BTExPQxA5Eg4KCk1LX1JFRl9BTlkQ",
            "OhIGCgJOTxA7EgwKCFJFQURPTkxZEDwSEAoMUkVGX0FOWV9UWVBFED0SDwoL",
            "UkVGX0FOWV9WQUwQPhILCgdTSVpFX09GED8SCwoHU1RfU0ZMRBBAEgoKBlNX",
            "SVRDSBBBEggKBFRBSUwQQhINCglVTkFMSUdORUQQQxIMCghWT0xBVElMRRBE",
            "EhMKD0xEX01FTUJFUl9UT0tFThBFEhEKDUxEX1RZUEVfVE9LRU4QRhISCg5J",
            "TlZBTElEX0JSQU5DSBBHEhEKDUNBTExfSU5ESVJFQ1QQSCKZAQoXSWxCaW5h",
            "cnlOdW1lcmljT3BlcmF0b3ISDwoLTk9ORV9CSU5BUlkQABIHCgNBZGQQARIH",
            "CgNTdWIQAhIHCgNNdWwQAxIHCgNEaXYQBBIHCgNSZW0QBRIKCgZCaXRBbmQQ",
            "BhIJCgVCaXRPchAHEgoKBkJpdFhvchAIEg0KCVNoaWZ0TGVmdBAJEg4KClNo",
            "aWZ0UmlnaHQQCiIxCgZJbFNpZ24SDQoJTk9ORV9TSUdOEAASCgoGU2lnbmVk",
            "EAESDAoIVW5zaWduZWQQAiKLAQoQSWxDb21wYXJpc29uS2luZBINCglOT05F",
            "X0tJTkQQABIMCghFcXVhbGl0eRABEg4KCkluZXF1YWxpdHkQAhIMCghMZXNz",
            "VGhhbhADEhMKD0xlc3NUaGFuT3JFcXVhbBAEEg8KC0dyZWF0ZXJUaGFuEAUS",
            "FgoSR3JlYXRlclRoYW5PckVxdWFsEAYi4gEKEElsQ29udmVyc2lvbktpbmQS",
            "EwoPTk9ORV9DT05WRVJTSU9OEAASCwoHSW52YWxpZBABEgcKA05vcBACEg4K",
            "CkludFRvRmxvYXQQAxIOCgpGbG9hdFRvSW50EAQSGAoURmxvYXRQcmVjaXNp",
            "b25DaGFuZ2UQBRIOCgpTaWduRXh0ZW5kEAYSDgoKWmVyb0V4dGVuZBAHEgwK",
            "CFRydW5jYXRlEAgSEgoOU3RvcEdDVHJhY2tpbmcQCRITCg9TdGFydEdDVHJh",
            "Y2tpbmcQChISCg5PYmplY3RJbnRlcmlvchALIo4BCgtJbFN0YWNrVHlwZRIT",
            "Cg9OT05FX1NUQUNLX1RZUEUQABIRCg1Vbmtub3duX1NUQUNLEAESDAoISTRf",
            "U1RBQ0sQAhILCgdJX1NUQUNLEAMSDAoISThfU1RBQ0sQBBIGCgJGNBAFEgYK",
            "AkY4EAYSBQoBTxAHEg0KCVJlZl9TVEFDSxAIEggKBFZvaWQQCSKvAQoPSWxQ",
            "cmltaXRpdmVUeXBlEhcKE05PTkVfUFJJTUlUSVZFX1RZUEUQABIICgROb25l",
            "EAESBgoCSTEQAhIGCgJJMhADEgYKAkk0EAQSBgoCSTgQBRIGCgJSNBAGEgYK",
            "AlI4EAcSBgoCVTEQCBIGCgJVMhAJEgYKAlU0EAoSBgoCVTgQCxIFCgFJEAwS",
            "BQoBVRANEgcKA1JlZhAOEgUKAVIQDxILCgdVbmtub3duEBAizAMKDUlsVmFy",
            "aWFibGVNc2cSHQoEdHlwZRgBIAEoCzIPLlR5cGVEZWZpbml0aW9uEgwKBG5h",
            "bWUYAiABKAkSGQoRaGFzX2luaXRpYWxfdmFsdWUYAyABKAgSNAoNdmFyaWFi",
            "bGVfa2luZBgEIAEoDjIdLklsVmFyaWFibGVNc2cuSWxWYXJpYWJsZUtpbmQi",
            "vAIKDklsVmFyaWFibGVLaW5kEggKBE5PTkUQABIJCgVMT0NBTBABEhAKDFBJ",
            "Tk5FRF9MT0NBTBACEhcKE1BJTk5FRF9SRUdJT05fTE9DQUwQAxIPCgtVU0lO",
            "R19MT0NBTBAEEhEKDUZPUkVBQ0hfTE9DQUwQBRIWChJJTklUSUFMSVpFUl9U",
            "QVJHRVQQBhINCglQQVJBTUVURVIQBxIYChRFWENFUFRJT05fU1RBQ0tfU0xP",
            "VBAIEhMKD0VYQ0VQVElPTl9MT0NBTBAJEg0KCVNUQUNLU0xPVBAKEhIKDk5B",
            "TUVEX0FSR1VNRU5UEAsSFwoTRElTUExBWV9DTEFTU19MT0NBTBAMEhEKDVBB",
            "VFRFUk5fTE9DQUwQDRIhCh1ERUNPTlNUUlVDVElPTl9JTklUX1RFTVBPUkFS",
            "WRAOIpYBChRJbFRyeUNhdGNoSGFuZGxlck1zZxIiCgRib2R5GAEgASgLMhQu",
            "SWxCbG9ja0NvbnRhaW5lck1zZxIgCgh2YXJpYWJsZRgCIAEoCzIOLklsVmFy",
            "aWFibGVNc2cSJAoGZmlsdGVyGAMgASgLMhQuSWxCbG9ja0NvbnRhaW5lck1z",
            "ZxISCgpoYXNfZmlsdGVyGAQgASgIIkwKEklsU3dpdGNoU2VjdGlvbk1zZxIN",
            "CgVsYWJlbBgBIAEoAxInCgx0YXJnZXRfaW5zdHIYAiABKAsyES5JbEluc3Ry",
            "dWN0aW9uTXNnQlEKEXNvb3QuZG90bmV0LnByb3RvQhNQcm90b0lsSW5zdHJ1",
            "Y3Rpb25zqgImU29vdC5Eb3RuZXQuRGVjb21waWxlci5Nb2RlbHMuUHJvdG9i",
            "dWZiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Soot.Dotnet.Decompiler.Models.Protobuf.AssemblyAllTypesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Soot.Dotnet.Decompiler.Models.Protobuf.IlFunctionMsg), global::Soot.Dotnet.Decompiler.Models.Protobuf.IlFunctionMsg.Parser, new[]{ "Body", "Variables" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Soot.Dotnet.Decompiler.Models.Protobuf.IlBlockContainerMsg), global::Soot.Dotnet.Decompiler.Models.Protobuf.IlBlockContainerMsg.Parser, new[]{ "Blocks" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Soot.Dotnet.Decompiler.Models.Protobuf.IlBlock), global::Soot.Dotnet.Decompiler.Models.Protobuf.IlBlock.Parser, new[]{ "ListOfIlInstructions", "BlockName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg), global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Parser, new[]{ "OpCode", "Method", "Arguments", "ValueInstruction", "ValueConstantString", "ValueConstantInt32", "ValueConstantInt64", "ValueConstantFloat", "ValueConstantDouble", "Target", "Type", "Field", "Variable", "Operator", "Sign", "Left", "Right", "TargetLabel", "ComparisonKind", "Condition", "TrueInst", "FalseInst", "Array", "ConversionKind", "InputType", "TargetType", "Argument", "ResultType", "Indices", "TryBlock", "Handlers", "FinallyBlock", "FaultBlock", "Body", "KeyInstr", "DefaultInst", "SwitchSections" }, null, new[]{ typeof(global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlOpCode), typeof(global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlBinaryNumericOperator), typeof(global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlSign), typeof(global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlComparisonKind), typeof(global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlConversionKind), typeof(global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlStackType), typeof(global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlPrimitiveType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Soot.Dotnet.Decompiler.Models.Protobuf.IlVariableMsg), global::Soot.Dotnet.Decompiler.Models.Protobuf.IlVariableMsg.Parser, new[]{ "Type", "Name", "HasInitialValue", "VariableKind" }, null, new[]{ typeof(global::Soot.Dotnet.Decompiler.Models.Protobuf.IlVariableMsg.Types.IlVariableKind) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Soot.Dotnet.Decompiler.Models.Protobuf.IlTryCatchHandlerMsg), global::Soot.Dotnet.Decompiler.Models.Protobuf.IlTryCatchHandlerMsg.Parser, new[]{ "Body", "Variable", "Filter", "HasFilter" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Soot.Dotnet.Decompiler.Models.Protobuf.IlSwitchSectionMsg), global::Soot.Dotnet.Decompiler.Models.Protobuf.IlSwitchSectionMsg.Parser, new[]{ "Label", "TargetInstr" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class IlFunctionMsg : pb::IMessage<IlFunctionMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<IlFunctionMsg> _parser = new pb::MessageParser<IlFunctionMsg>(() => new IlFunctionMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IlFunctionMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IlFunctionMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IlFunctionMsg(IlFunctionMsg other) : this() {
      body_ = other.body_ != null ? other.body_.Clone() : null;
      variables_ = other.variables_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IlFunctionMsg Clone() {
      return new IlFunctionMsg(this);
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 1;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.IlBlockContainerMsg body_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.IlBlockContainerMsg Body {
      get { return body_; }
      set {
        body_ = value;
      }
    }

    /// <summary>Field number for the "variables" field.</summary>
    public const int VariablesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Soot.Dotnet.Decompiler.Models.Protobuf.IlVariableMsg> _repeated_variables_codec
        = pb::FieldCodec.ForMessage(18, global::Soot.Dotnet.Decompiler.Models.Protobuf.IlVariableMsg.Parser);
    private readonly pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.IlVariableMsg> variables_ = new pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.IlVariableMsg>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.IlVariableMsg> Variables {
      get { return variables_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IlFunctionMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IlFunctionMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Body, other.Body)) return false;
      if(!variables_.Equals(other.variables_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (body_ != null) hash ^= Body.GetHashCode();
      hash ^= variables_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (body_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Body);
      }
      variables_.WriteTo(output, _repeated_variables_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (body_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Body);
      }
      variables_.WriteTo(ref output, _repeated_variables_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (body_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Body);
      }
      size += variables_.CalculateSize(_repeated_variables_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IlFunctionMsg other) {
      if (other == null) {
        return;
      }
      if (other.body_ != null) {
        if (body_ == null) {
          Body = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlBlockContainerMsg();
        }
        Body.MergeFrom(other.Body);
      }
      variables_.Add(other.variables_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (body_ == null) {
              Body = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlBlockContainerMsg();
            }
            input.ReadMessage(Body);
            break;
          }
          case 18: {
            variables_.AddEntriesFrom(input, _repeated_variables_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (body_ == null) {
              Body = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlBlockContainerMsg();
            }
            input.ReadMessage(Body);
            break;
          }
          case 18: {
            variables_.AddEntriesFrom(ref input, _repeated_variables_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class IlBlockContainerMsg : pb::IMessage<IlBlockContainerMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<IlBlockContainerMsg> _parser = new pb::MessageParser<IlBlockContainerMsg>(() => new IlBlockContainerMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IlBlockContainerMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IlBlockContainerMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IlBlockContainerMsg(IlBlockContainerMsg other) : this() {
      blocks_ = other.blocks_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IlBlockContainerMsg Clone() {
      return new IlBlockContainerMsg(this);
    }

    /// <summary>Field number for the "blocks" field.</summary>
    public const int BlocksFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Soot.Dotnet.Decompiler.Models.Protobuf.IlBlock> _repeated_blocks_codec
        = pb::FieldCodec.ForMessage(10, global::Soot.Dotnet.Decompiler.Models.Protobuf.IlBlock.Parser);
    private readonly pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.IlBlock> blocks_ = new pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.IlBlock>();
    /// <summary>
    /// IL BlockContainer
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.IlBlock> Blocks {
      get { return blocks_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IlBlockContainerMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IlBlockContainerMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!blocks_.Equals(other.blocks_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= blocks_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      blocks_.WriteTo(output, _repeated_blocks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      blocks_.WriteTo(ref output, _repeated_blocks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += blocks_.CalculateSize(_repeated_blocks_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IlBlockContainerMsg other) {
      if (other == null) {
        return;
      }
      blocks_.Add(other.blocks_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            blocks_.AddEntriesFrom(input, _repeated_blocks_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            blocks_.AddEntriesFrom(ref input, _repeated_blocks_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class IlBlock : pb::IMessage<IlBlock>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<IlBlock> _parser = new pb::MessageParser<IlBlock>(() => new IlBlock());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IlBlock> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IlBlock() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IlBlock(IlBlock other) : this() {
      listOfIlInstructions_ = other.listOfIlInstructions_.Clone();
      blockName_ = other.blockName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IlBlock Clone() {
      return new IlBlock(this);
    }

    /// <summary>Field number for the "list_of_il_instructions" field.</summary>
    public const int ListOfIlInstructionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg> _repeated_listOfIlInstructions_codec
        = pb::FieldCodec.ForMessage(10, global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Parser);
    private readonly pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg> listOfIlInstructions_ = new pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg> ListOfIlInstructions {
      get { return listOfIlInstructions_; }
    }

    /// <summary>Field number for the "block_name" field.</summary>
    public const int BlockNameFieldNumber = 2;
    private string blockName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BlockName {
      get { return blockName_; }
      set {
        blockName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IlBlock);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IlBlock other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listOfIlInstructions_.Equals(other.listOfIlInstructions_)) return false;
      if (BlockName != other.BlockName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listOfIlInstructions_.GetHashCode();
      if (BlockName.Length != 0) hash ^= BlockName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      listOfIlInstructions_.WriteTo(output, _repeated_listOfIlInstructions_codec);
      if (BlockName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BlockName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      listOfIlInstructions_.WriteTo(ref output, _repeated_listOfIlInstructions_codec);
      if (BlockName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BlockName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listOfIlInstructions_.CalculateSize(_repeated_listOfIlInstructions_codec);
      if (BlockName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BlockName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IlBlock other) {
      if (other == null) {
        return;
      }
      listOfIlInstructions_.Add(other.listOfIlInstructions_);
      if (other.BlockName.Length != 0) {
        BlockName = other.BlockName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listOfIlInstructions_.AddEntriesFrom(input, _repeated_listOfIlInstructions_codec);
            break;
          }
          case 18: {
            BlockName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            listOfIlInstructions_.AddEntriesFrom(ref input, _repeated_listOfIlInstructions_codec);
            break;
          }
          case 18: {
            BlockName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class IlInstructionMsg : pb::IMessage<IlInstructionMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<IlInstructionMsg> _parser = new pb::MessageParser<IlInstructionMsg>(() => new IlInstructionMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IlInstructionMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IlInstructionMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IlInstructionMsg(IlInstructionMsg other) : this() {
      opCode_ = other.opCode_;
      method_ = other.method_ != null ? other.method_.Clone() : null;
      arguments_ = other.arguments_.Clone();
      valueInstruction_ = other.valueInstruction_ != null ? other.valueInstruction_.Clone() : null;
      valueConstantString_ = other.valueConstantString_;
      valueConstantInt32_ = other.valueConstantInt32_;
      valueConstantInt64_ = other.valueConstantInt64_;
      valueConstantFloat_ = other.valueConstantFloat_;
      valueConstantDouble_ = other.valueConstantDouble_;
      target_ = other.target_ != null ? other.target_.Clone() : null;
      type_ = other.type_ != null ? other.type_.Clone() : null;
      field_ = other.field_ != null ? other.field_.Clone() : null;
      variable_ = other.variable_ != null ? other.variable_.Clone() : null;
      operator_ = other.operator_;
      sign_ = other.sign_;
      left_ = other.left_ != null ? other.left_.Clone() : null;
      right_ = other.right_ != null ? other.right_.Clone() : null;
      targetLabel_ = other.targetLabel_;
      comparisonKind_ = other.comparisonKind_;
      condition_ = other.condition_ != null ? other.condition_.Clone() : null;
      trueInst_ = other.trueInst_ != null ? other.trueInst_.Clone() : null;
      falseInst_ = other.falseInst_ != null ? other.falseInst_.Clone() : null;
      array_ = other.array_ != null ? other.array_.Clone() : null;
      conversionKind_ = other.conversionKind_;
      inputType_ = other.inputType_;
      targetType_ = other.targetType_;
      argument_ = other.argument_ != null ? other.argument_.Clone() : null;
      resultType_ = other.resultType_;
      indices_ = other.indices_.Clone();
      tryBlock_ = other.tryBlock_ != null ? other.tryBlock_.Clone() : null;
      handlers_ = other.handlers_.Clone();
      finallyBlock_ = other.finallyBlock_ != null ? other.finallyBlock_.Clone() : null;
      faultBlock_ = other.faultBlock_ != null ? other.faultBlock_.Clone() : null;
      body_ = other.body_ != null ? other.body_.Clone() : null;
      keyInstr_ = other.keyInstr_ != null ? other.keyInstr_.Clone() : null;
      defaultInst_ = other.defaultInst_ != null ? other.defaultInst_.Clone() : null;
      switchSections_ = other.switchSections_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IlInstructionMsg Clone() {
      return new IlInstructionMsg(this);
    }

    /// <summary>Field number for the "op_code" field.</summary>
    public const int OpCodeFieldNumber = 1;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlOpCode opCode_ = global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlOpCode.NoneOp;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlOpCode OpCode {
      get { return opCode_; }
      set {
        opCode_ = value;
      }
    }

    /// <summary>Field number for the "method" field.</summary>
    public const int MethodFieldNumber = 4;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.MethodDefinition method_;
    /// <summary>
    /// CALL LDMEMBERTOKEN
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.MethodDefinition Method {
      get { return method_; }
      set {
        method_ = value;
      }
    }

    /// <summary>Field number for the "arguments" field.</summary>
    public const int ArgumentsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg> _repeated_arguments_codec
        = pb::FieldCodec.ForMessage(42, global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Parser);
    private readonly pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg> arguments_ = new pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg> Arguments {
      get { return arguments_; }
    }

    /// <summary>Field number for the "value_instruction" field.</summary>
    public const int ValueInstructionFieldNumber = 6;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg valueInstruction_;
    /// <summary>
    /// LEAVE STOBJ STLOC
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg ValueInstruction {
      get { return valueInstruction_; }
      set {
        valueInstruction_ = value;
      }
    }

    /// <summary>Field number for the "value_constant_string" field.</summary>
    public const int ValueConstantStringFieldNumber = 7;
    private string valueConstantString_ = "";
    /// <summary>
    /// LDSTR LDC_I4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ValueConstantString {
      get { return valueConstantString_; }
      set {
        valueConstantString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value_constant_int32" field.</summary>
    public const int ValueConstantInt32FieldNumber = 16;
    private int valueConstantInt32_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ValueConstantInt32 {
      get { return valueConstantInt32_; }
      set {
        valueConstantInt32_ = value;
      }
    }

    /// <summary>Field number for the "value_constant_int64" field.</summary>
    public const int ValueConstantInt64FieldNumber = 38;
    private long valueConstantInt64_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ValueConstantInt64 {
      get { return valueConstantInt64_; }
      set {
        valueConstantInt64_ = value;
      }
    }

    /// <summary>Field number for the "value_constant_float" field.</summary>
    public const int ValueConstantFloatFieldNumber = 39;
    private float valueConstantFloat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float ValueConstantFloat {
      get { return valueConstantFloat_; }
      set {
        valueConstantFloat_ = value;
      }
    }

    /// <summary>Field number for the "value_constant_double" field.</summary>
    public const int ValueConstantDoubleFieldNumber = 40;
    private double valueConstantDouble_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double ValueConstantDouble {
      get { return valueConstantDouble_; }
      set {
        valueConstantDouble_ = value;
      }
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 8;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg target_;
    /// <summary>
    /// STOBJ LDFLDA LDOBJ
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg Target {
      get { return target_; }
      set {
        target_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 9;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition type_;
    /// <summary>
    /// STOBJ LDOBJ NEWARR LDELEMA CASTCLASS ISINST UNBOXANY
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "field" field.</summary>
    public const int FieldFieldNumber = 10;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.FieldDefinition field_;
    /// <summary>
    /// LDFLDA LDMEMBERTOKEN
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.FieldDefinition Field {
      get { return field_; }
      set {
        field_ = value;
      }
    }

    /// <summary>Field number for the "variable" field.</summary>
    public const int VariableFieldNumber = 11;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.IlVariableMsg variable_;
    /// <summary>
    /// LDLOC STLOC TryCatchHandler
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.IlVariableMsg Variable {
      get { return variable_; }
      set {
        variable_ = value;
      }
    }

    /// <summary>Field number for the "operator" field.</summary>
    public const int OperatorFieldNumber = 12;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlBinaryNumericOperator operator_ = global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlBinaryNumericOperator.NoneBinary;
    /// <summary>
    /// TODO may insert Result type + Underlying type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlBinaryNumericOperator Operator {
      get { return operator_; }
      set {
        operator_ = value;
      }
    }

    /// <summary>Field number for the "sign" field.</summary>
    public const int SignFieldNumber = 20;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlSign sign_ = global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlSign.NoneSign;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlSign Sign {
      get { return sign_; }
      set {
        sign_ = value;
      }
    }

    /// <summary>Field number for the "left" field.</summary>
    public const int LeftFieldNumber = 14;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg left_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg Left {
      get { return left_; }
      set {
        left_ = value;
      }
    }

    /// <summary>Field number for the "right" field.</summary>
    public const int RightFieldNumber = 15;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg right_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg Right {
      get { return right_; }
      set {
        right_ = value;
      }
    }

    /// <summary>Field number for the "target_label" field.</summary>
    public const int TargetLabelFieldNumber = 18;
    private string targetLabel_ = "";
    /// <summary>
    /// BRANCH
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TargetLabel {
      get { return targetLabel_; }
      set {
        targetLabel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "comparison_kind" field.</summary>
    public const int ComparisonKindFieldNumber = 21;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlComparisonKind comparisonKind_ = global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlComparisonKind.NoneKind;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlComparisonKind ComparisonKind {
      get { return comparisonKind_; }
      set {
        comparisonKind_ = value;
      }
    }

    /// <summary>Field number for the "condition" field.</summary>
    public const int ConditionFieldNumber = 22;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg condition_;
    /// <summary>
    /// IF_INSTRUCTION
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg Condition {
      get { return condition_; }
      set {
        condition_ = value;
      }
    }

    /// <summary>Field number for the "true_inst" field.</summary>
    public const int TrueInstFieldNumber = 23;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg trueInst_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg TrueInst {
      get { return trueInst_; }
      set {
        trueInst_ = value;
      }
    }

    /// <summary>Field number for the "false_inst" field.</summary>
    public const int FalseInstFieldNumber = 24;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg falseInst_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg FalseInst {
      get { return falseInst_; }
      set {
        falseInst_ = value;
      }
    }

    /// <summary>Field number for the "array" field.</summary>
    public const int ArrayFieldNumber = 30;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg array_;
    /// <summary>
    ///LDLEN LDELEMA
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg Array {
      get { return array_; }
      set {
        array_ = value;
      }
    }

    /// <summary>Field number for the "conversion_kind" field.</summary>
    public const int ConversionKindFieldNumber = 25;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlConversionKind conversionKind_ = global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlConversionKind.NoneConversion;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlConversionKind ConversionKind {
      get { return conversionKind_; }
      set {
        conversionKind_ = value;
      }
    }

    /// <summary>Field number for the "input_type" field.</summary>
    public const int InputTypeFieldNumber = 26;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlStackType inputType_ = global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlStackType.NoneStackType;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlStackType InputType {
      get { return inputType_; }
      set {
        inputType_ = value;
      }
    }

    /// <summary>Field number for the "target_type" field.</summary>
    public const int TargetTypeFieldNumber = 28;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlPrimitiveType targetType_ = global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlPrimitiveType.NonePrimitiveType;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlPrimitiveType TargetType {
      get { return targetType_; }
      set {
        targetType_ = value;
      }
    }

    /// <summary>Field number for the "argument" field.</summary>
    public const int ArgumentFieldNumber = 29;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg argument_;
    /// <summary>
    /// CONV CASTCLASS ISINST BOX UNBOXANY
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg Argument {
      get { return argument_; }
      set {
        argument_ = value;
      }
    }

    /// <summary>Field number for the "result_type" field.</summary>
    public const int ResultTypeFieldNumber = 27;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlStackType resultType_ = global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlStackType.NoneStackType;
    /// <summary>
    /// CONV LDLEN UNBOXANY
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlStackType ResultType {
      get { return resultType_; }
      set {
        resultType_ = value;
      }
    }

    /// <summary>Field number for the "indices" field.</summary>
    public const int IndicesFieldNumber = 31;
    private static readonly pb::FieldCodec<global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg> _repeated_indices_codec
        = pb::FieldCodec.ForMessage(250, global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Parser);
    private readonly pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg> indices_ = new pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg>();
    /// <summary>
    /// NEWARR LDELEMA
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg> Indices {
      get { return indices_; }
    }

    /// <summary>Field number for the "try_block" field.</summary>
    public const int TryBlockFieldNumber = 32;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.IlBlockContainerMsg tryBlock_;
    /// <summary>
    /// TRY
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.IlBlockContainerMsg TryBlock {
      get { return tryBlock_; }
      set {
        tryBlock_ = value;
      }
    }

    /// <summary>Field number for the "handlers" field.</summary>
    public const int HandlersFieldNumber = 33;
    private static readonly pb::FieldCodec<global::Soot.Dotnet.Decompiler.Models.Protobuf.IlTryCatchHandlerMsg> _repeated_handlers_codec
        = pb::FieldCodec.ForMessage(266, global::Soot.Dotnet.Decompiler.Models.Protobuf.IlTryCatchHandlerMsg.Parser);
    private readonly pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.IlTryCatchHandlerMsg> handlers_ = new pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.IlTryCatchHandlerMsg>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.IlTryCatchHandlerMsg> Handlers {
      get { return handlers_; }
    }

    /// <summary>Field number for the "finally_block" field.</summary>
    public const int FinallyBlockFieldNumber = 34;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.IlBlockContainerMsg finallyBlock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.IlBlockContainerMsg FinallyBlock {
      get { return finallyBlock_; }
      set {
        finallyBlock_ = value;
      }
    }

    /// <summary>Field number for the "fault_block" field.</summary>
    public const int FaultBlockFieldNumber = 35;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.IlBlockContainerMsg faultBlock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.IlBlockContainerMsg FaultBlock {
      get { return faultBlock_; }
      set {
        faultBlock_ = value;
      }
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 37;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.IlBlockContainerMsg body_;
    /// <summary>
    /// TRYCATCHHANDLER
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.IlBlockContainerMsg Body {
      get { return body_; }
      set {
        body_ = value;
      }
    }

    /// <summary>Field number for the "key_instr" field.</summary>
    public const int KeyInstrFieldNumber = 41;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg keyInstr_;
    /// <summary>
    /// SWITCH_INSTR
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg KeyInstr {
      get { return keyInstr_; }
      set {
        keyInstr_ = value;
      }
    }

    /// <summary>Field number for the "default_inst" field.</summary>
    public const int DefaultInstFieldNumber = 42;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg defaultInst_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg DefaultInst {
      get { return defaultInst_; }
      set {
        defaultInst_ = value;
      }
    }

    /// <summary>Field number for the "switch_sections" field.</summary>
    public const int SwitchSectionsFieldNumber = 43;
    private static readonly pb::FieldCodec<global::Soot.Dotnet.Decompiler.Models.Protobuf.IlSwitchSectionMsg> _repeated_switchSections_codec
        = pb::FieldCodec.ForMessage(346, global::Soot.Dotnet.Decompiler.Models.Protobuf.IlSwitchSectionMsg.Parser);
    private readonly pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.IlSwitchSectionMsg> switchSections_ = new pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.IlSwitchSectionMsg>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Soot.Dotnet.Decompiler.Models.Protobuf.IlSwitchSectionMsg> SwitchSections {
      get { return switchSections_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IlInstructionMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IlInstructionMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OpCode != other.OpCode) return false;
      if (!object.Equals(Method, other.Method)) return false;
      if(!arguments_.Equals(other.arguments_)) return false;
      if (!object.Equals(ValueInstruction, other.ValueInstruction)) return false;
      if (ValueConstantString != other.ValueConstantString) return false;
      if (ValueConstantInt32 != other.ValueConstantInt32) return false;
      if (ValueConstantInt64 != other.ValueConstantInt64) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ValueConstantFloat, other.ValueConstantFloat)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ValueConstantDouble, other.ValueConstantDouble)) return false;
      if (!object.Equals(Target, other.Target)) return false;
      if (!object.Equals(Type, other.Type)) return false;
      if (!object.Equals(Field, other.Field)) return false;
      if (!object.Equals(Variable, other.Variable)) return false;
      if (Operator != other.Operator) return false;
      if (Sign != other.Sign) return false;
      if (!object.Equals(Left, other.Left)) return false;
      if (!object.Equals(Right, other.Right)) return false;
      if (TargetLabel != other.TargetLabel) return false;
      if (ComparisonKind != other.ComparisonKind) return false;
      if (!object.Equals(Condition, other.Condition)) return false;
      if (!object.Equals(TrueInst, other.TrueInst)) return false;
      if (!object.Equals(FalseInst, other.FalseInst)) return false;
      if (!object.Equals(Array, other.Array)) return false;
      if (ConversionKind != other.ConversionKind) return false;
      if (InputType != other.InputType) return false;
      if (TargetType != other.TargetType) return false;
      if (!object.Equals(Argument, other.Argument)) return false;
      if (ResultType != other.ResultType) return false;
      if(!indices_.Equals(other.indices_)) return false;
      if (!object.Equals(TryBlock, other.TryBlock)) return false;
      if(!handlers_.Equals(other.handlers_)) return false;
      if (!object.Equals(FinallyBlock, other.FinallyBlock)) return false;
      if (!object.Equals(FaultBlock, other.FaultBlock)) return false;
      if (!object.Equals(Body, other.Body)) return false;
      if (!object.Equals(KeyInstr, other.KeyInstr)) return false;
      if (!object.Equals(DefaultInst, other.DefaultInst)) return false;
      if(!switchSections_.Equals(other.switchSections_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OpCode != global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlOpCode.NoneOp) hash ^= OpCode.GetHashCode();
      if (method_ != null) hash ^= Method.GetHashCode();
      hash ^= arguments_.GetHashCode();
      if (valueInstruction_ != null) hash ^= ValueInstruction.GetHashCode();
      if (ValueConstantString.Length != 0) hash ^= ValueConstantString.GetHashCode();
      if (ValueConstantInt32 != 0) hash ^= ValueConstantInt32.GetHashCode();
      if (ValueConstantInt64 != 0L) hash ^= ValueConstantInt64.GetHashCode();
      if (ValueConstantFloat != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ValueConstantFloat);
      if (ValueConstantDouble != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ValueConstantDouble);
      if (target_ != null) hash ^= Target.GetHashCode();
      if (type_ != null) hash ^= Type.GetHashCode();
      if (field_ != null) hash ^= Field.GetHashCode();
      if (variable_ != null) hash ^= Variable.GetHashCode();
      if (Operator != global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlBinaryNumericOperator.NoneBinary) hash ^= Operator.GetHashCode();
      if (Sign != global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlSign.NoneSign) hash ^= Sign.GetHashCode();
      if (left_ != null) hash ^= Left.GetHashCode();
      if (right_ != null) hash ^= Right.GetHashCode();
      if (TargetLabel.Length != 0) hash ^= TargetLabel.GetHashCode();
      if (ComparisonKind != global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlComparisonKind.NoneKind) hash ^= ComparisonKind.GetHashCode();
      if (condition_ != null) hash ^= Condition.GetHashCode();
      if (trueInst_ != null) hash ^= TrueInst.GetHashCode();
      if (falseInst_ != null) hash ^= FalseInst.GetHashCode();
      if (array_ != null) hash ^= Array.GetHashCode();
      if (ConversionKind != global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlConversionKind.NoneConversion) hash ^= ConversionKind.GetHashCode();
      if (InputType != global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlStackType.NoneStackType) hash ^= InputType.GetHashCode();
      if (TargetType != global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlPrimitiveType.NonePrimitiveType) hash ^= TargetType.GetHashCode();
      if (argument_ != null) hash ^= Argument.GetHashCode();
      if (ResultType != global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlStackType.NoneStackType) hash ^= ResultType.GetHashCode();
      hash ^= indices_.GetHashCode();
      if (tryBlock_ != null) hash ^= TryBlock.GetHashCode();
      hash ^= handlers_.GetHashCode();
      if (finallyBlock_ != null) hash ^= FinallyBlock.GetHashCode();
      if (faultBlock_ != null) hash ^= FaultBlock.GetHashCode();
      if (body_ != null) hash ^= Body.GetHashCode();
      if (keyInstr_ != null) hash ^= KeyInstr.GetHashCode();
      if (defaultInst_ != null) hash ^= DefaultInst.GetHashCode();
      hash ^= switchSections_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (OpCode != global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlOpCode.NoneOp) {
        output.WriteRawTag(8);
        output.WriteEnum((int) OpCode);
      }
      if (method_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Method);
      }
      arguments_.WriteTo(output, _repeated_arguments_codec);
      if (valueInstruction_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ValueInstruction);
      }
      if (ValueConstantString.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ValueConstantString);
      }
      if (target_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Target);
      }
      if (type_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Type);
      }
      if (field_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Field);
      }
      if (variable_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Variable);
      }
      if (Operator != global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlBinaryNumericOperator.NoneBinary) {
        output.WriteRawTag(96);
        output.WriteEnum((int) Operator);
      }
      if (left_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(Left);
      }
      if (right_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(Right);
      }
      if (ValueConstantInt32 != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(ValueConstantInt32);
      }
      if (TargetLabel.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(TargetLabel);
      }
      if (Sign != global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlSign.NoneSign) {
        output.WriteRawTag(160, 1);
        output.WriteEnum((int) Sign);
      }
      if (ComparisonKind != global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlComparisonKind.NoneKind) {
        output.WriteRawTag(168, 1);
        output.WriteEnum((int) ComparisonKind);
      }
      if (condition_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(Condition);
      }
      if (trueInst_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(TrueInst);
      }
      if (falseInst_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(FalseInst);
      }
      if (ConversionKind != global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlConversionKind.NoneConversion) {
        output.WriteRawTag(200, 1);
        output.WriteEnum((int) ConversionKind);
      }
      if (InputType != global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlStackType.NoneStackType) {
        output.WriteRawTag(208, 1);
        output.WriteEnum((int) InputType);
      }
      if (ResultType != global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlStackType.NoneStackType) {
        output.WriteRawTag(216, 1);
        output.WriteEnum((int) ResultType);
      }
      if (TargetType != global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlPrimitiveType.NonePrimitiveType) {
        output.WriteRawTag(224, 1);
        output.WriteEnum((int) TargetType);
      }
      if (argument_ != null) {
        output.WriteRawTag(234, 1);
        output.WriteMessage(Argument);
      }
      if (array_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(Array);
      }
      indices_.WriteTo(output, _repeated_indices_codec);
      if (tryBlock_ != null) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(TryBlock);
      }
      handlers_.WriteTo(output, _repeated_handlers_codec);
      if (finallyBlock_ != null) {
        output.WriteRawTag(146, 2);
        output.WriteMessage(FinallyBlock);
      }
      if (faultBlock_ != null) {
        output.WriteRawTag(154, 2);
        output.WriteMessage(FaultBlock);
      }
      if (body_ != null) {
        output.WriteRawTag(170, 2);
        output.WriteMessage(Body);
      }
      if (ValueConstantInt64 != 0L) {
        output.WriteRawTag(176, 2);
        output.WriteInt64(ValueConstantInt64);
      }
      if (ValueConstantFloat != 0F) {
        output.WriteRawTag(189, 2);
        output.WriteFloat(ValueConstantFloat);
      }
      if (ValueConstantDouble != 0D) {
        output.WriteRawTag(193, 2);
        output.WriteDouble(ValueConstantDouble);
      }
      if (keyInstr_ != null) {
        output.WriteRawTag(202, 2);
        output.WriteMessage(KeyInstr);
      }
      if (defaultInst_ != null) {
        output.WriteRawTag(210, 2);
        output.WriteMessage(DefaultInst);
      }
      switchSections_.WriteTo(output, _repeated_switchSections_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (OpCode != global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlOpCode.NoneOp) {
        output.WriteRawTag(8);
        output.WriteEnum((int) OpCode);
      }
      if (method_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Method);
      }
      arguments_.WriteTo(ref output, _repeated_arguments_codec);
      if (valueInstruction_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ValueInstruction);
      }
      if (ValueConstantString.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ValueConstantString);
      }
      if (target_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Target);
      }
      if (type_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Type);
      }
      if (field_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Field);
      }
      if (variable_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Variable);
      }
      if (Operator != global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlBinaryNumericOperator.NoneBinary) {
        output.WriteRawTag(96);
        output.WriteEnum((int) Operator);
      }
      if (left_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(Left);
      }
      if (right_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(Right);
      }
      if (ValueConstantInt32 != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(ValueConstantInt32);
      }
      if (TargetLabel.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(TargetLabel);
      }
      if (Sign != global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlSign.NoneSign) {
        output.WriteRawTag(160, 1);
        output.WriteEnum((int) Sign);
      }
      if (ComparisonKind != global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlComparisonKind.NoneKind) {
        output.WriteRawTag(168, 1);
        output.WriteEnum((int) ComparisonKind);
      }
      if (condition_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(Condition);
      }
      if (trueInst_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(TrueInst);
      }
      if (falseInst_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(FalseInst);
      }
      if (ConversionKind != global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlConversionKind.NoneConversion) {
        output.WriteRawTag(200, 1);
        output.WriteEnum((int) ConversionKind);
      }
      if (InputType != global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlStackType.NoneStackType) {
        output.WriteRawTag(208, 1);
        output.WriteEnum((int) InputType);
      }
      if (ResultType != global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlStackType.NoneStackType) {
        output.WriteRawTag(216, 1);
        output.WriteEnum((int) ResultType);
      }
      if (TargetType != global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlPrimitiveType.NonePrimitiveType) {
        output.WriteRawTag(224, 1);
        output.WriteEnum((int) TargetType);
      }
      if (argument_ != null) {
        output.WriteRawTag(234, 1);
        output.WriteMessage(Argument);
      }
      if (array_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(Array);
      }
      indices_.WriteTo(ref output, _repeated_indices_codec);
      if (tryBlock_ != null) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(TryBlock);
      }
      handlers_.WriteTo(ref output, _repeated_handlers_codec);
      if (finallyBlock_ != null) {
        output.WriteRawTag(146, 2);
        output.WriteMessage(FinallyBlock);
      }
      if (faultBlock_ != null) {
        output.WriteRawTag(154, 2);
        output.WriteMessage(FaultBlock);
      }
      if (body_ != null) {
        output.WriteRawTag(170, 2);
        output.WriteMessage(Body);
      }
      if (ValueConstantInt64 != 0L) {
        output.WriteRawTag(176, 2);
        output.WriteInt64(ValueConstantInt64);
      }
      if (ValueConstantFloat != 0F) {
        output.WriteRawTag(189, 2);
        output.WriteFloat(ValueConstantFloat);
      }
      if (ValueConstantDouble != 0D) {
        output.WriteRawTag(193, 2);
        output.WriteDouble(ValueConstantDouble);
      }
      if (keyInstr_ != null) {
        output.WriteRawTag(202, 2);
        output.WriteMessage(KeyInstr);
      }
      if (defaultInst_ != null) {
        output.WriteRawTag(210, 2);
        output.WriteMessage(DefaultInst);
      }
      switchSections_.WriteTo(ref output, _repeated_switchSections_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OpCode != global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlOpCode.NoneOp) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OpCode);
      }
      if (method_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Method);
      }
      size += arguments_.CalculateSize(_repeated_arguments_codec);
      if (valueInstruction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ValueInstruction);
      }
      if (ValueConstantString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ValueConstantString);
      }
      if (ValueConstantInt32 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ValueConstantInt32);
      }
      if (ValueConstantInt64 != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(ValueConstantInt64);
      }
      if (ValueConstantFloat != 0F) {
        size += 2 + 4;
      }
      if (ValueConstantDouble != 0D) {
        size += 2 + 8;
      }
      if (target_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Target);
      }
      if (type_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Type);
      }
      if (field_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Field);
      }
      if (variable_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Variable);
      }
      if (Operator != global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlBinaryNumericOperator.NoneBinary) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Operator);
      }
      if (Sign != global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlSign.NoneSign) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Sign);
      }
      if (left_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Left);
      }
      if (right_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Right);
      }
      if (TargetLabel.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(TargetLabel);
      }
      if (ComparisonKind != global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlComparisonKind.NoneKind) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) ComparisonKind);
      }
      if (condition_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Condition);
      }
      if (trueInst_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TrueInst);
      }
      if (falseInst_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FalseInst);
      }
      if (array_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Array);
      }
      if (ConversionKind != global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlConversionKind.NoneConversion) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) ConversionKind);
      }
      if (InputType != global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlStackType.NoneStackType) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) InputType);
      }
      if (TargetType != global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlPrimitiveType.NonePrimitiveType) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) TargetType);
      }
      if (argument_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Argument);
      }
      if (ResultType != global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlStackType.NoneStackType) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) ResultType);
      }
      size += indices_.CalculateSize(_repeated_indices_codec);
      if (tryBlock_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TryBlock);
      }
      size += handlers_.CalculateSize(_repeated_handlers_codec);
      if (finallyBlock_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FinallyBlock);
      }
      if (faultBlock_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FaultBlock);
      }
      if (body_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Body);
      }
      if (keyInstr_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(KeyInstr);
      }
      if (defaultInst_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DefaultInst);
      }
      size += switchSections_.CalculateSize(_repeated_switchSections_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IlInstructionMsg other) {
      if (other == null) {
        return;
      }
      if (other.OpCode != global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlOpCode.NoneOp) {
        OpCode = other.OpCode;
      }
      if (other.method_ != null) {
        if (method_ == null) {
          Method = new global::Soot.Dotnet.Decompiler.Models.Protobuf.MethodDefinition();
        }
        Method.MergeFrom(other.Method);
      }
      arguments_.Add(other.arguments_);
      if (other.valueInstruction_ != null) {
        if (valueInstruction_ == null) {
          ValueInstruction = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg();
        }
        ValueInstruction.MergeFrom(other.ValueInstruction);
      }
      if (other.ValueConstantString.Length != 0) {
        ValueConstantString = other.ValueConstantString;
      }
      if (other.ValueConstantInt32 != 0) {
        ValueConstantInt32 = other.ValueConstantInt32;
      }
      if (other.ValueConstantInt64 != 0L) {
        ValueConstantInt64 = other.ValueConstantInt64;
      }
      if (other.ValueConstantFloat != 0F) {
        ValueConstantFloat = other.ValueConstantFloat;
      }
      if (other.ValueConstantDouble != 0D) {
        ValueConstantDouble = other.ValueConstantDouble;
      }
      if (other.target_ != null) {
        if (target_ == null) {
          Target = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg();
        }
        Target.MergeFrom(other.Target);
      }
      if (other.type_ != null) {
        if (type_ == null) {
          Type = new global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition();
        }
        Type.MergeFrom(other.Type);
      }
      if (other.field_ != null) {
        if (field_ == null) {
          Field = new global::Soot.Dotnet.Decompiler.Models.Protobuf.FieldDefinition();
        }
        Field.MergeFrom(other.Field);
      }
      if (other.variable_ != null) {
        if (variable_ == null) {
          Variable = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlVariableMsg();
        }
        Variable.MergeFrom(other.Variable);
      }
      if (other.Operator != global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlBinaryNumericOperator.NoneBinary) {
        Operator = other.Operator;
      }
      if (other.Sign != global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlSign.NoneSign) {
        Sign = other.Sign;
      }
      if (other.left_ != null) {
        if (left_ == null) {
          Left = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg();
        }
        Left.MergeFrom(other.Left);
      }
      if (other.right_ != null) {
        if (right_ == null) {
          Right = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg();
        }
        Right.MergeFrom(other.Right);
      }
      if (other.TargetLabel.Length != 0) {
        TargetLabel = other.TargetLabel;
      }
      if (other.ComparisonKind != global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlComparisonKind.NoneKind) {
        ComparisonKind = other.ComparisonKind;
      }
      if (other.condition_ != null) {
        if (condition_ == null) {
          Condition = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg();
        }
        Condition.MergeFrom(other.Condition);
      }
      if (other.trueInst_ != null) {
        if (trueInst_ == null) {
          TrueInst = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg();
        }
        TrueInst.MergeFrom(other.TrueInst);
      }
      if (other.falseInst_ != null) {
        if (falseInst_ == null) {
          FalseInst = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg();
        }
        FalseInst.MergeFrom(other.FalseInst);
      }
      if (other.array_ != null) {
        if (array_ == null) {
          Array = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg();
        }
        Array.MergeFrom(other.Array);
      }
      if (other.ConversionKind != global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlConversionKind.NoneConversion) {
        ConversionKind = other.ConversionKind;
      }
      if (other.InputType != global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlStackType.NoneStackType) {
        InputType = other.InputType;
      }
      if (other.TargetType != global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlPrimitiveType.NonePrimitiveType) {
        TargetType = other.TargetType;
      }
      if (other.argument_ != null) {
        if (argument_ == null) {
          Argument = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg();
        }
        Argument.MergeFrom(other.Argument);
      }
      if (other.ResultType != global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlStackType.NoneStackType) {
        ResultType = other.ResultType;
      }
      indices_.Add(other.indices_);
      if (other.tryBlock_ != null) {
        if (tryBlock_ == null) {
          TryBlock = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlBlockContainerMsg();
        }
        TryBlock.MergeFrom(other.TryBlock);
      }
      handlers_.Add(other.handlers_);
      if (other.finallyBlock_ != null) {
        if (finallyBlock_ == null) {
          FinallyBlock = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlBlockContainerMsg();
        }
        FinallyBlock.MergeFrom(other.FinallyBlock);
      }
      if (other.faultBlock_ != null) {
        if (faultBlock_ == null) {
          FaultBlock = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlBlockContainerMsg();
        }
        FaultBlock.MergeFrom(other.FaultBlock);
      }
      if (other.body_ != null) {
        if (body_ == null) {
          Body = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlBlockContainerMsg();
        }
        Body.MergeFrom(other.Body);
      }
      if (other.keyInstr_ != null) {
        if (keyInstr_ == null) {
          KeyInstr = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg();
        }
        KeyInstr.MergeFrom(other.KeyInstr);
      }
      if (other.defaultInst_ != null) {
        if (defaultInst_ == null) {
          DefaultInst = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg();
        }
        DefaultInst.MergeFrom(other.DefaultInst);
      }
      switchSections_.Add(other.switchSections_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OpCode = (global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlOpCode) input.ReadEnum();
            break;
          }
          case 34: {
            if (method_ == null) {
              Method = new global::Soot.Dotnet.Decompiler.Models.Protobuf.MethodDefinition();
            }
            input.ReadMessage(Method);
            break;
          }
          case 42: {
            arguments_.AddEntriesFrom(input, _repeated_arguments_codec);
            break;
          }
          case 50: {
            if (valueInstruction_ == null) {
              ValueInstruction = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg();
            }
            input.ReadMessage(ValueInstruction);
            break;
          }
          case 58: {
            ValueConstantString = input.ReadString();
            break;
          }
          case 66: {
            if (target_ == null) {
              Target = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg();
            }
            input.ReadMessage(Target);
            break;
          }
          case 74: {
            if (type_ == null) {
              Type = new global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition();
            }
            input.ReadMessage(Type);
            break;
          }
          case 82: {
            if (field_ == null) {
              Field = new global::Soot.Dotnet.Decompiler.Models.Protobuf.FieldDefinition();
            }
            input.ReadMessage(Field);
            break;
          }
          case 90: {
            if (variable_ == null) {
              Variable = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlVariableMsg();
            }
            input.ReadMessage(Variable);
            break;
          }
          case 96: {
            Operator = (global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlBinaryNumericOperator) input.ReadEnum();
            break;
          }
          case 114: {
            if (left_ == null) {
              Left = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg();
            }
            input.ReadMessage(Left);
            break;
          }
          case 122: {
            if (right_ == null) {
              Right = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg();
            }
            input.ReadMessage(Right);
            break;
          }
          case 128: {
            ValueConstantInt32 = input.ReadInt32();
            break;
          }
          case 146: {
            TargetLabel = input.ReadString();
            break;
          }
          case 160: {
            Sign = (global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlSign) input.ReadEnum();
            break;
          }
          case 168: {
            ComparisonKind = (global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlComparisonKind) input.ReadEnum();
            break;
          }
          case 178: {
            if (condition_ == null) {
              Condition = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg();
            }
            input.ReadMessage(Condition);
            break;
          }
          case 186: {
            if (trueInst_ == null) {
              TrueInst = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg();
            }
            input.ReadMessage(TrueInst);
            break;
          }
          case 194: {
            if (falseInst_ == null) {
              FalseInst = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg();
            }
            input.ReadMessage(FalseInst);
            break;
          }
          case 200: {
            ConversionKind = (global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlConversionKind) input.ReadEnum();
            break;
          }
          case 208: {
            InputType = (global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlStackType) input.ReadEnum();
            break;
          }
          case 216: {
            ResultType = (global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlStackType) input.ReadEnum();
            break;
          }
          case 224: {
            TargetType = (global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlPrimitiveType) input.ReadEnum();
            break;
          }
          case 234: {
            if (argument_ == null) {
              Argument = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg();
            }
            input.ReadMessage(Argument);
            break;
          }
          case 242: {
            if (array_ == null) {
              Array = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg();
            }
            input.ReadMessage(Array);
            break;
          }
          case 250: {
            indices_.AddEntriesFrom(input, _repeated_indices_codec);
            break;
          }
          case 258: {
            if (tryBlock_ == null) {
              TryBlock = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlBlockContainerMsg();
            }
            input.ReadMessage(TryBlock);
            break;
          }
          case 266: {
            handlers_.AddEntriesFrom(input, _repeated_handlers_codec);
            break;
          }
          case 274: {
            if (finallyBlock_ == null) {
              FinallyBlock = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlBlockContainerMsg();
            }
            input.ReadMessage(FinallyBlock);
            break;
          }
          case 282: {
            if (faultBlock_ == null) {
              FaultBlock = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlBlockContainerMsg();
            }
            input.ReadMessage(FaultBlock);
            break;
          }
          case 298: {
            if (body_ == null) {
              Body = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlBlockContainerMsg();
            }
            input.ReadMessage(Body);
            break;
          }
          case 304: {
            ValueConstantInt64 = input.ReadInt64();
            break;
          }
          case 317: {
            ValueConstantFloat = input.ReadFloat();
            break;
          }
          case 321: {
            ValueConstantDouble = input.ReadDouble();
            break;
          }
          case 330: {
            if (keyInstr_ == null) {
              KeyInstr = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg();
            }
            input.ReadMessage(KeyInstr);
            break;
          }
          case 338: {
            if (defaultInst_ == null) {
              DefaultInst = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg();
            }
            input.ReadMessage(DefaultInst);
            break;
          }
          case 346: {
            switchSections_.AddEntriesFrom(input, _repeated_switchSections_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            OpCode = (global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlOpCode) input.ReadEnum();
            break;
          }
          case 34: {
            if (method_ == null) {
              Method = new global::Soot.Dotnet.Decompiler.Models.Protobuf.MethodDefinition();
            }
            input.ReadMessage(Method);
            break;
          }
          case 42: {
            arguments_.AddEntriesFrom(ref input, _repeated_arguments_codec);
            break;
          }
          case 50: {
            if (valueInstruction_ == null) {
              ValueInstruction = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg();
            }
            input.ReadMessage(ValueInstruction);
            break;
          }
          case 58: {
            ValueConstantString = input.ReadString();
            break;
          }
          case 66: {
            if (target_ == null) {
              Target = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg();
            }
            input.ReadMessage(Target);
            break;
          }
          case 74: {
            if (type_ == null) {
              Type = new global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition();
            }
            input.ReadMessage(Type);
            break;
          }
          case 82: {
            if (field_ == null) {
              Field = new global::Soot.Dotnet.Decompiler.Models.Protobuf.FieldDefinition();
            }
            input.ReadMessage(Field);
            break;
          }
          case 90: {
            if (variable_ == null) {
              Variable = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlVariableMsg();
            }
            input.ReadMessage(Variable);
            break;
          }
          case 96: {
            Operator = (global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlBinaryNumericOperator) input.ReadEnum();
            break;
          }
          case 114: {
            if (left_ == null) {
              Left = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg();
            }
            input.ReadMessage(Left);
            break;
          }
          case 122: {
            if (right_ == null) {
              Right = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg();
            }
            input.ReadMessage(Right);
            break;
          }
          case 128: {
            ValueConstantInt32 = input.ReadInt32();
            break;
          }
          case 146: {
            TargetLabel = input.ReadString();
            break;
          }
          case 160: {
            Sign = (global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlSign) input.ReadEnum();
            break;
          }
          case 168: {
            ComparisonKind = (global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlComparisonKind) input.ReadEnum();
            break;
          }
          case 178: {
            if (condition_ == null) {
              Condition = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg();
            }
            input.ReadMessage(Condition);
            break;
          }
          case 186: {
            if (trueInst_ == null) {
              TrueInst = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg();
            }
            input.ReadMessage(TrueInst);
            break;
          }
          case 194: {
            if (falseInst_ == null) {
              FalseInst = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg();
            }
            input.ReadMessage(FalseInst);
            break;
          }
          case 200: {
            ConversionKind = (global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlConversionKind) input.ReadEnum();
            break;
          }
          case 208: {
            InputType = (global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlStackType) input.ReadEnum();
            break;
          }
          case 216: {
            ResultType = (global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlStackType) input.ReadEnum();
            break;
          }
          case 224: {
            TargetType = (global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg.Types.IlPrimitiveType) input.ReadEnum();
            break;
          }
          case 234: {
            if (argument_ == null) {
              Argument = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg();
            }
            input.ReadMessage(Argument);
            break;
          }
          case 242: {
            if (array_ == null) {
              Array = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg();
            }
            input.ReadMessage(Array);
            break;
          }
          case 250: {
            indices_.AddEntriesFrom(ref input, _repeated_indices_codec);
            break;
          }
          case 258: {
            if (tryBlock_ == null) {
              TryBlock = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlBlockContainerMsg();
            }
            input.ReadMessage(TryBlock);
            break;
          }
          case 266: {
            handlers_.AddEntriesFrom(ref input, _repeated_handlers_codec);
            break;
          }
          case 274: {
            if (finallyBlock_ == null) {
              FinallyBlock = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlBlockContainerMsg();
            }
            input.ReadMessage(FinallyBlock);
            break;
          }
          case 282: {
            if (faultBlock_ == null) {
              FaultBlock = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlBlockContainerMsg();
            }
            input.ReadMessage(FaultBlock);
            break;
          }
          case 298: {
            if (body_ == null) {
              Body = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlBlockContainerMsg();
            }
            input.ReadMessage(Body);
            break;
          }
          case 304: {
            ValueConstantInt64 = input.ReadInt64();
            break;
          }
          case 317: {
            ValueConstantFloat = input.ReadFloat();
            break;
          }
          case 321: {
            ValueConstantDouble = input.ReadDouble();
            break;
          }
          case 330: {
            if (keyInstr_ == null) {
              KeyInstr = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg();
            }
            input.ReadMessage(KeyInstr);
            break;
          }
          case 338: {
            if (defaultInst_ == null) {
              DefaultInst = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg();
            }
            input.ReadMessage(DefaultInst);
            break;
          }
          case 346: {
            switchSections_.AddEntriesFrom(ref input, _repeated_switchSections_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the IlInstructionMsg message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum IlOpCode {
        [pbr::OriginalName("NONE_OP")] NoneOp = 0,
        [pbr::OriginalName("NOP")] Nop = 1,
        [pbr::OriginalName("CALL")] Call = 4,
        [pbr::OriginalName("LEAVE")] Leave = 5,
        [pbr::OriginalName("LDSTR")] Ldstr = 6,
        [pbr::OriginalName("STOBJ")] Stobj = 7,
        [pbr::OriginalName("LDFLDA")] Ldflda = 8,
        [pbr::OriginalName("LDC_I4")] LdcI4 = 9,
        [pbr::OriginalName("LDLOC")] Ldloc = 10,
        [pbr::OriginalName("LDOBJ")] Ldobj = 11,
        [pbr::OriginalName("STLOC")] Stloc = 12,
        [pbr::OriginalName("NEWOBJ")] Newobj = 13,
        [pbr::OriginalName("CALLVIRT")] Callvirt = 14,
        [pbr::OriginalName("BINARY_NUMERIC_INSTRUCTION")] BinaryNumericInstruction = 15,
        [pbr::OriginalName("BRANCH")] Branch = 16,
        [pbr::OriginalName("COMP")] Comp = 17,
        [pbr::OriginalName("IF_INSTRUCTION")] IfInstruction = 18,
        [pbr::OriginalName("LDSFLDA")] Ldsflda = 19,
        [pbr::OriginalName("LDNULL")] Ldnull = 20,
        [pbr::OriginalName("LDLEN")] Ldlen = 21,
        [pbr::OriginalName("CONV")] Conv = 22,
        [pbr::OriginalName("NEWARR")] Newarr = 23,
        [pbr::OriginalName("LDELEMA")] Ldelema = 24,
        [pbr::OriginalName("CASTCLASS")] Castclass = 25,
        [pbr::OriginalName("ISINST")] Isinst = 26,
        [pbr::OriginalName("BOX")] Box = 27,
        [pbr::OriginalName("UNBOXANY")] Unboxany = 28,
        [pbr::OriginalName("UNBOX")] Unbox = 29,
        [pbr::OriginalName("TRY_CATCH")] TryCatch = 30,
        [pbr::OriginalName("LDLOCA")] Ldloca = 31,
        [pbr::OriginalName("DEFAULT_VALUE")] DefaultValue = 32,
        [pbr::OriginalName("NOT")] Not = 33,
        [pbr::OriginalName("TRY_FINALLY")] TryFinally = 34,
        [pbr::OriginalName("TRY_FAULT")] TryFault = 35,
        [pbr::OriginalName("BLOCK_CONTAINER")] BlockContainer = 36,
        [pbr::OriginalName("BLOCK")] Block = 37,
        [pbr::OriginalName("TRY_CATCH_HANDLER")] TryCatchHandler = 38,
        [pbr::OriginalName("RETHROW")] Rethrow = 39,
        [pbr::OriginalName("THROW")] Throw = 40,
        [pbr::OriginalName("DEBUG_BREAK")] DebugBreak = 41,
        [pbr::OriginalName("CK_FINITE")] CkFinite = 42,
        [pbr::OriginalName("CP_BLK")] CpBlk = 44,
        [pbr::OriginalName("CP_OBJ")] CpObj = 45,
        [pbr::OriginalName("DUP")] Dup = 46,
        [pbr::OriginalName("INIT_BLK")] InitBlk = 47,
        [pbr::OriginalName("INIT_OBJ")] InitObj = 48,
        [pbr::OriginalName("LDC_I8")] LdcI8 = 49,
        [pbr::OriginalName("LDC_R4")] LdcR4 = 50,
        [pbr::OriginalName("LDC_R8")] LdcR8 = 51,
        [pbr::OriginalName("LD_FLD")] LdFld = 52,
        [pbr::OriginalName("LD_FTN")] LdFtn = 53,
        [pbr::OriginalName("LD_SFLD")] LdSfld = 54,
        [pbr::OriginalName("LD_TOKEN")] LdToken = 55,
        [pbr::OriginalName("LD_VIRT_FTN")] LdVirtFtn = 56,
        [pbr::OriginalName("LOC_ALLOC")] LocAlloc = 57,
        [pbr::OriginalName("MK_REF_ANY")] MkRefAny = 58,
        [pbr::OriginalName("NO")] No = 59,
        [pbr::OriginalName("READONLY")] Readonly = 60,
        [pbr::OriginalName("REF_ANY_TYPE")] RefAnyType = 61,
        [pbr::OriginalName("REF_ANY_VAL")] RefAnyVal = 62,
        [pbr::OriginalName("SIZE_OF")] SizeOf = 63,
        [pbr::OriginalName("ST_SFLD")] StSfld = 64,
        [pbr::OriginalName("SWITCH")] Switch = 65,
        [pbr::OriginalName("TAIL")] Tail = 66,
        [pbr::OriginalName("UNALIGNED")] Unaligned = 67,
        [pbr::OriginalName("VOLATILE")] Volatile = 68,
        [pbr::OriginalName("LD_MEMBER_TOKEN")] LdMemberToken = 69,
        [pbr::OriginalName("LD_TYPE_TOKEN")] LdTypeToken = 70,
        [pbr::OriginalName("INVALID_BRANCH")] InvalidBranch = 71,
        [pbr::OriginalName("CALL_INDIRECT")] CallIndirect = 72,
      }

      /// <summary>
      /// BINARY_NUMERIC_INSTRUCTION
      /// </summary>
      public enum IlBinaryNumericOperator {
        [pbr::OriginalName("NONE_BINARY")] NoneBinary = 0,
        [pbr::OriginalName("Add")] Add = 1,
        [pbr::OriginalName("Sub")] Sub = 2,
        [pbr::OriginalName("Mul")] Mul = 3,
        [pbr::OriginalName("Div")] Div = 4,
        [pbr::OriginalName("Rem")] Rem = 5,
        [pbr::OriginalName("BitAnd")] BitAnd = 6,
        [pbr::OriginalName("BitOr")] BitOr = 7,
        [pbr::OriginalName("BitXor")] BitXor = 8,
        [pbr::OriginalName("ShiftLeft")] ShiftLeft = 9,
        [pbr::OriginalName("ShiftRight")] ShiftRight = 10,
      }

      /// <summary>
      /// BINARY_NUMERIC_INSTRUCTION COMP CONV
      /// </summary>
      public enum IlSign {
        [pbr::OriginalName("NONE_SIGN")] NoneSign = 0,
        [pbr::OriginalName("Signed")] Signed = 1,
        [pbr::OriginalName("Unsigned")] Unsigned = 2,
      }

      /// <summary>
      /// COMP
      /// </summary>
      public enum IlComparisonKind {
        [pbr::OriginalName("NONE_KIND")] NoneKind = 0,
        [pbr::OriginalName("Equality")] Equality = 1,
        [pbr::OriginalName("Inequality")] Inequality = 2,
        [pbr::OriginalName("LessThan")] LessThan = 3,
        [pbr::OriginalName("LessThanOrEqual")] LessThanOrEqual = 4,
        [pbr::OriginalName("GreaterThan")] GreaterThan = 5,
        [pbr::OriginalName("GreaterThanOrEqual")] GreaterThanOrEqual = 6,
      }

      /// <summary>
      /// CONV
      /// </summary>
      public enum IlConversionKind {
        [pbr::OriginalName("NONE_CONVERSION")] NoneConversion = 0,
        [pbr::OriginalName("Invalid")] Invalid = 1,
        [pbr::OriginalName("Nop")] Nop = 2,
        [pbr::OriginalName("IntToFloat")] IntToFloat = 3,
        [pbr::OriginalName("FloatToInt")] FloatToInt = 4,
        [pbr::OriginalName("FloatPrecisionChange")] FloatPrecisionChange = 5,
        [pbr::OriginalName("SignExtend")] SignExtend = 6,
        [pbr::OriginalName("ZeroExtend")] ZeroExtend = 7,
        [pbr::OriginalName("Truncate")] Truncate = 8,
        [pbr::OriginalName("StopGCTracking")] StopGctracking = 9,
        [pbr::OriginalName("StartGCTracking")] StartGctracking = 10,
        [pbr::OriginalName("ObjectInterior")] ObjectInterior = 11,
      }

      public enum IlStackType {
        [pbr::OriginalName("NONE_STACK_TYPE")] NoneStackType = 0,
        [pbr::OriginalName("Unknown_STACK")] UnknownStack = 1,
        [pbr::OriginalName("I4_STACK")] I4Stack = 2,
        [pbr::OriginalName("I_STACK")] IStack = 3,
        [pbr::OriginalName("I8_STACK")] I8Stack = 4,
        [pbr::OriginalName("F4")] F4 = 5,
        [pbr::OriginalName("F8")] F8 = 6,
        [pbr::OriginalName("O")] O = 7,
        [pbr::OriginalName("Ref_STACK")] RefStack = 8,
        [pbr::OriginalName("Void")] Void = 9,
      }

      public enum IlPrimitiveType {
        [pbr::OriginalName("NONE_PRIMITIVE_TYPE")] NonePrimitiveType = 0,
        [pbr::OriginalName("None")] None = 1,
        [pbr::OriginalName("I1")] I1 = 2,
        [pbr::OriginalName("I2")] I2 = 3,
        [pbr::OriginalName("I4")] I4 = 4,
        [pbr::OriginalName("I8")] I8 = 5,
        [pbr::OriginalName("R4")] R4 = 6,
        [pbr::OriginalName("R8")] R8 = 7,
        [pbr::OriginalName("U1")] U1 = 8,
        [pbr::OriginalName("U2")] U2 = 9,
        [pbr::OriginalName("U4")] U4 = 10,
        [pbr::OriginalName("U8")] U8 = 11,
        [pbr::OriginalName("I")] I = 12,
        [pbr::OriginalName("U")] U = 13,
        [pbr::OriginalName("Ref")] Ref = 14,
        [pbr::OriginalName("R")] R = 15,
        [pbr::OriginalName("Unknown")] Unknown = 16,
      }

    }
    #endregion

  }

  public sealed partial class IlVariableMsg : pb::IMessage<IlVariableMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<IlVariableMsg> _parser = new pb::MessageParser<IlVariableMsg>(() => new IlVariableMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IlVariableMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IlVariableMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IlVariableMsg(IlVariableMsg other) : this() {
      type_ = other.type_ != null ? other.type_.Clone() : null;
      name_ = other.name_;
      hasInitialValue_ = other.hasInitialValue_;
      variableKind_ = other.variableKind_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IlVariableMsg Clone() {
      return new IlVariableMsg(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "has_initial_value" field.</summary>
    public const int HasInitialValueFieldNumber = 3;
    private bool hasInitialValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInitialValue {
      get { return hasInitialValue_; }
      set {
        hasInitialValue_ = value;
      }
    }

    /// <summary>Field number for the "variable_kind" field.</summary>
    public const int VariableKindFieldNumber = 4;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.IlVariableMsg.Types.IlVariableKind variableKind_ = global::Soot.Dotnet.Decompiler.Models.Protobuf.IlVariableMsg.Types.IlVariableKind.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.IlVariableMsg.Types.IlVariableKind VariableKind {
      get { return variableKind_; }
      set {
        variableKind_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IlVariableMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IlVariableMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Type, other.Type)) return false;
      if (Name != other.Name) return false;
      if (HasInitialValue != other.HasInitialValue) return false;
      if (VariableKind != other.VariableKind) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (type_ != null) hash ^= Type.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (HasInitialValue != false) hash ^= HasInitialValue.GetHashCode();
      if (VariableKind != global::Soot.Dotnet.Decompiler.Models.Protobuf.IlVariableMsg.Types.IlVariableKind.None) hash ^= VariableKind.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (type_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Type);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (HasInitialValue != false) {
        output.WriteRawTag(24);
        output.WriteBool(HasInitialValue);
      }
      if (VariableKind != global::Soot.Dotnet.Decompiler.Models.Protobuf.IlVariableMsg.Types.IlVariableKind.None) {
        output.WriteRawTag(32);
        output.WriteEnum((int) VariableKind);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (type_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Type);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (HasInitialValue != false) {
        output.WriteRawTag(24);
        output.WriteBool(HasInitialValue);
      }
      if (VariableKind != global::Soot.Dotnet.Decompiler.Models.Protobuf.IlVariableMsg.Types.IlVariableKind.None) {
        output.WriteRawTag(32);
        output.WriteEnum((int) VariableKind);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (type_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Type);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasInitialValue != false) {
        size += 1 + 1;
      }
      if (VariableKind != global::Soot.Dotnet.Decompiler.Models.Protobuf.IlVariableMsg.Types.IlVariableKind.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) VariableKind);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IlVariableMsg other) {
      if (other == null) {
        return;
      }
      if (other.type_ != null) {
        if (type_ == null) {
          Type = new global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition();
        }
        Type.MergeFrom(other.Type);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.HasInitialValue != false) {
        HasInitialValue = other.HasInitialValue;
      }
      if (other.VariableKind != global::Soot.Dotnet.Decompiler.Models.Protobuf.IlVariableMsg.Types.IlVariableKind.None) {
        VariableKind = other.VariableKind;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (type_ == null) {
              Type = new global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition();
            }
            input.ReadMessage(Type);
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            HasInitialValue = input.ReadBool();
            break;
          }
          case 32: {
            VariableKind = (global::Soot.Dotnet.Decompiler.Models.Protobuf.IlVariableMsg.Types.IlVariableKind) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (type_ == null) {
              Type = new global::Soot.Dotnet.Decompiler.Models.Protobuf.TypeDefinition();
            }
            input.ReadMessage(Type);
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            HasInitialValue = input.ReadBool();
            break;
          }
          case 32: {
            VariableKind = (global::Soot.Dotnet.Decompiler.Models.Protobuf.IlVariableMsg.Types.IlVariableKind) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the IlVariableMsg message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum IlVariableKind {
        [pbr::OriginalName("NONE")] None = 0,
        [pbr::OriginalName("LOCAL")] Local = 1,
        [pbr::OriginalName("PINNED_LOCAL")] PinnedLocal = 2,
        [pbr::OriginalName("PINNED_REGION_LOCAL")] PinnedRegionLocal = 3,
        [pbr::OriginalName("USING_LOCAL")] UsingLocal = 4,
        [pbr::OriginalName("FOREACH_LOCAL")] ForeachLocal = 5,
        [pbr::OriginalName("INITIALIZER_TARGET")] InitializerTarget = 6,
        [pbr::OriginalName("PARAMETER")] Parameter = 7,
        [pbr::OriginalName("EXCEPTION_STACK_SLOT")] ExceptionStackSlot = 8,
        [pbr::OriginalName("EXCEPTION_LOCAL")] ExceptionLocal = 9,
        [pbr::OriginalName("STACKSLOT")] Stackslot = 10,
        [pbr::OriginalName("NAMED_ARGUMENT")] NamedArgument = 11,
        [pbr::OriginalName("DISPLAY_CLASS_LOCAL")] DisplayClassLocal = 12,
        [pbr::OriginalName("PATTERN_LOCAL")] PatternLocal = 13,
        [pbr::OriginalName("DECONSTRUCTION_INIT_TEMPORARY")] DeconstructionInitTemporary = 14,
      }

    }
    #endregion

  }

  public sealed partial class IlTryCatchHandlerMsg : pb::IMessage<IlTryCatchHandlerMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<IlTryCatchHandlerMsg> _parser = new pb::MessageParser<IlTryCatchHandlerMsg>(() => new IlTryCatchHandlerMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IlTryCatchHandlerMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IlTryCatchHandlerMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IlTryCatchHandlerMsg(IlTryCatchHandlerMsg other) : this() {
      body_ = other.body_ != null ? other.body_.Clone() : null;
      variable_ = other.variable_ != null ? other.variable_.Clone() : null;
      filter_ = other.filter_ != null ? other.filter_.Clone() : null;
      hasFilter_ = other.hasFilter_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IlTryCatchHandlerMsg Clone() {
      return new IlTryCatchHandlerMsg(this);
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 1;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.IlBlockContainerMsg body_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.IlBlockContainerMsg Body {
      get { return body_; }
      set {
        body_ = value;
      }
    }

    /// <summary>Field number for the "variable" field.</summary>
    public const int VariableFieldNumber = 2;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.IlVariableMsg variable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.IlVariableMsg Variable {
      get { return variable_; }
      set {
        variable_ = value;
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 3;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.IlBlockContainerMsg filter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.IlBlockContainerMsg Filter {
      get { return filter_; }
      set {
        filter_ = value;
      }
    }

    /// <summary>Field number for the "has_filter" field.</summary>
    public const int HasFilterFieldNumber = 4;
    private bool hasFilter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFilter {
      get { return hasFilter_; }
      set {
        hasFilter_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IlTryCatchHandlerMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IlTryCatchHandlerMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Body, other.Body)) return false;
      if (!object.Equals(Variable, other.Variable)) return false;
      if (!object.Equals(Filter, other.Filter)) return false;
      if (HasFilter != other.HasFilter) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (body_ != null) hash ^= Body.GetHashCode();
      if (variable_ != null) hash ^= Variable.GetHashCode();
      if (filter_ != null) hash ^= Filter.GetHashCode();
      if (HasFilter != false) hash ^= HasFilter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (body_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Body);
      }
      if (variable_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Variable);
      }
      if (filter_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Filter);
      }
      if (HasFilter != false) {
        output.WriteRawTag(32);
        output.WriteBool(HasFilter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (body_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Body);
      }
      if (variable_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Variable);
      }
      if (filter_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Filter);
      }
      if (HasFilter != false) {
        output.WriteRawTag(32);
        output.WriteBool(HasFilter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (body_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Body);
      }
      if (variable_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Variable);
      }
      if (filter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Filter);
      }
      if (HasFilter != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IlTryCatchHandlerMsg other) {
      if (other == null) {
        return;
      }
      if (other.body_ != null) {
        if (body_ == null) {
          Body = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlBlockContainerMsg();
        }
        Body.MergeFrom(other.Body);
      }
      if (other.variable_ != null) {
        if (variable_ == null) {
          Variable = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlVariableMsg();
        }
        Variable.MergeFrom(other.Variable);
      }
      if (other.filter_ != null) {
        if (filter_ == null) {
          Filter = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlBlockContainerMsg();
        }
        Filter.MergeFrom(other.Filter);
      }
      if (other.HasFilter != false) {
        HasFilter = other.HasFilter;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (body_ == null) {
              Body = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlBlockContainerMsg();
            }
            input.ReadMessage(Body);
            break;
          }
          case 18: {
            if (variable_ == null) {
              Variable = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlVariableMsg();
            }
            input.ReadMessage(Variable);
            break;
          }
          case 26: {
            if (filter_ == null) {
              Filter = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlBlockContainerMsg();
            }
            input.ReadMessage(Filter);
            break;
          }
          case 32: {
            HasFilter = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (body_ == null) {
              Body = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlBlockContainerMsg();
            }
            input.ReadMessage(Body);
            break;
          }
          case 18: {
            if (variable_ == null) {
              Variable = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlVariableMsg();
            }
            input.ReadMessage(Variable);
            break;
          }
          case 26: {
            if (filter_ == null) {
              Filter = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlBlockContainerMsg();
            }
            input.ReadMessage(Filter);
            break;
          }
          case 32: {
            HasFilter = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class IlSwitchSectionMsg : pb::IMessage<IlSwitchSectionMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<IlSwitchSectionMsg> _parser = new pb::MessageParser<IlSwitchSectionMsg>(() => new IlSwitchSectionMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IlSwitchSectionMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IlSwitchSectionMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IlSwitchSectionMsg(IlSwitchSectionMsg other) : this() {
      label_ = other.label_;
      targetInstr_ = other.targetInstr_ != null ? other.targetInstr_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IlSwitchSectionMsg Clone() {
      return new IlSwitchSectionMsg(this);
    }

    /// <summary>Field number for the "label" field.</summary>
    public const int LabelFieldNumber = 1;
    private long label_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Label {
      get { return label_; }
      set {
        label_ = value;
      }
    }

    /// <summary>Field number for the "target_instr" field.</summary>
    public const int TargetInstrFieldNumber = 2;
    private global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg targetInstr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg TargetInstr {
      get { return targetInstr_; }
      set {
        targetInstr_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IlSwitchSectionMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IlSwitchSectionMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Label != other.Label) return false;
      if (!object.Equals(TargetInstr, other.TargetInstr)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Label != 0L) hash ^= Label.GetHashCode();
      if (targetInstr_ != null) hash ^= TargetInstr.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Label != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Label);
      }
      if (targetInstr_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TargetInstr);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Label != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Label);
      }
      if (targetInstr_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TargetInstr);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Label != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Label);
      }
      if (targetInstr_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TargetInstr);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IlSwitchSectionMsg other) {
      if (other == null) {
        return;
      }
      if (other.Label != 0L) {
        Label = other.Label;
      }
      if (other.targetInstr_ != null) {
        if (targetInstr_ == null) {
          TargetInstr = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg();
        }
        TargetInstr.MergeFrom(other.TargetInstr);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Label = input.ReadInt64();
            break;
          }
          case 18: {
            if (targetInstr_ == null) {
              TargetInstr = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg();
            }
            input.ReadMessage(TargetInstr);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Label = input.ReadInt64();
            break;
          }
          case 18: {
            if (targetInstr_ == null) {
              TargetInstr = new global::Soot.Dotnet.Decompiler.Models.Protobuf.IlInstructionMsg();
            }
            input.ReadMessage(TargetInstr);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
